### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cosmos.query_iterable.QueryIterable.PartitioningQueryIterable
  - azure.cosmos.query_iterable.QueryIterable.fetch_next_block
  class: azure.cosmos.query_iterable.QueryIterable
  fullName: azure.cosmos.query_iterable.QueryIterable
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cosmos.query_iterable
  name: QueryIterable
  source:
    id: QueryIterable
    path: .\azure\cosmos\query_iterable.py
    remote:
      branch: master
      path: .\azure\cosmos\query_iterable.py
      repo: https://github.com/johanste/azure-cosmos-python
    startLine: 27
  summary: 'Represents an iterable object of the query results.

    QueryIterable is a wrapper for query execution context.




    '
  syntax:
    content: QueryIterable(client, query, options, fetch_function, collection_link=None)
  type: class
  uid: azure.cosmos.query_iterable.QueryIterable
- class: azure.cosmos.query_iterable.QueryIterable
  fullName: azure.cosmos.query_iterable.QueryIterable.PartitioningQueryIterable
  langs:
  - python
  module: azure.cosmos.query_iterable
  name: PartitioningQueryIterable(client, query, options, database_link, partition_key)
  source:
    id: PartitioningQueryIterable
    path: .\azure\cosmos\query_iterable.py
    remote:
      branch: master
      path: .\azure\cosmos\query_iterable.py
      repo: https://github.com/johanste/azure-cosmos-python
    startLine: 60
  summary: 'Represents a client side partitioning query iterable.


    This constructor instantiates a QueryIterable for

    client side partitioning queries, and sets _MultiCollectionQueryExecutionContext

    as the internal execution context.

    '
  syntax:
    content: PartitioningQueryIterable(client, query, options, database_link, partition_key)
    parameters:
    - description: 'Instance of document client

        '
      id: client
      type:
      - CosmosClient
    - description: ''
      id: or dict) options
      type:
      - (str
    - description: 'The request options for the request.

        '
      id: options
      type:
      - dict
    - description: 'Database self link or ID based link

        '
      id: database_link
      type:
      - str
    - description: 'Partition key for the query

        '
      id: partition_key
      type:
      - str
    - id: partition_key
  type: method
  uid: azure.cosmos.query_iterable.QueryIterable.PartitioningQueryIterable
- class: azure.cosmos.query_iterable.QueryIterable
  fullName: azure.cosmos.query_iterable.QueryIterable.fetch_next_block
  langs:
  - python
  module: azure.cosmos.query_iterable
  name: fetch_next_block()
  source:
    id: fetch_next_block
    path: .\azure\cosmos\query_iterable.py
    remote:
      branch: master
      path: .\azure\cosmos\query_iterable.py
      repo: https://github.com/johanste/azure-cosmos-python
    startLine: 119
  summary: 'Returns a block of results with respecting retry policy.


    This method only exists for backward compatibility reasons. (Because QueryIterable

    has exposed fetch_next_block api).

    '
  syntax:
    content: fetch_next_block()
    parameters: []
    return:
      description: 'List of results.

        '
      type:
      - list
  type: method
  uid: azure.cosmos.query_iterable.QueryIterable.fetch_next_block
references:
- fullName: azure.cosmos.query_iterable.QueryIterable.PartitioningQueryIterable
  isExternal: false
  name: PartitioningQueryIterable(client, query, options, database_link, partition_key)
  parent: azure.cosmos.query_iterable.QueryIterable
  uid: azure.cosmos.query_iterable.QueryIterable.PartitioningQueryIterable
- fullName: azure.cosmos.query_iterable.QueryIterable.fetch_next_block
  isExternal: false
  name: fetch_next_block()
  parent: azure.cosmos.query_iterable.QueryIterable
  uid: azure.cosmos.query_iterable.QueryIterable.fetch_next_block
- fullName: (str
  name: (str
  spec.python:
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  uid: (str
