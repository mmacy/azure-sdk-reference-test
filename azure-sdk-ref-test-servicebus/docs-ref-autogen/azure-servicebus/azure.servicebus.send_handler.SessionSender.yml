### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.send_handler.SessionSender.queue_message
  - azure.servicebus.send_handler.SessionSender.schedule
  - azure.servicebus.send_handler.SessionSender.send
  class: azure.servicebus.send_handler.SessionSender
  fullName: azure.servicebus.send_handler.SessionSender
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.servicebus.base_handler.BaseHandler
    - inheritance:
      - type: builtins.object
      type: azure.servicebus.common.mixins.SenderMixin
    type: azure.servicebus.send_handler.Sender
  langs:
  - python
  module: azure.servicebus.send_handler
  name: SessionSender
  source:
    id: SessionSender
    path: azure-servicebus\azure\servicebus\send_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\send_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 197
  summary: '


    '
  syntax:
    content: SessionSender(handler_id, target, auth_config, session=None, connection=None,
      encoding='UTF-8', debug=False, **kwargs)
  type: class
  uid: azure.servicebus.send_handler.SessionSender
- class: azure.servicebus.send_handler.SessionSender
  fullName: azure.servicebus.send_handler.SessionSender.queue_message
  langs:
  - python
  module: azure.servicebus.send_handler
  name: queue_message(message)
  source:
    id: queue_message
    path: azure-servicebus\azure\servicebus\send_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\send_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 224
  summary: "Queue a message to be sent later. This operation should be followed up\n\
    with send_pending_messages.\n:param message: The message to be sent.\n:type message:\
    \ ~azure.servicebus.Message\n\nPut the message to be sent later in the queue<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n       message = Message(\"Hello\
    \ World!\")\n       message_next = Message(\"How are you?\")\n       sender.queue_message(message)\n\
    \       sender.queue_message(message_next)\n\n   ````\n"
  syntax:
    content: queue_message(message)
    parameters:
    - id: message
  type: method
  uid: azure.servicebus.send_handler.SessionSender.queue_message
- class: azure.servicebus.send_handler.SessionSender
  fullName: azure.servicebus.send_handler.SessionSender.schedule
  langs:
  - python
  module: azure.servicebus.send_handler
  name: schedule(schedule_time, *messages)
  source:
    id: schedule
    path: azure-servicebus\azure\servicebus\send_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\send_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 243
  summary: "Send one or more messages to be enqueued at a specific time.\nReturns\
    \ a list of the sequence numbers of the enqueued messages.\n\nSchedule a message\
    \ to be sent in future<!--[!code-python[Main](ples\\test_examples.py )]-->\n\n\
    <!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\\0\\\\\
    azure-servicebus\\\\examples\\\\test_examples.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   # Get the sender - a single open Connection with\
    \ which multiple send operations can be made\n       sender = queue_client.get_sender(session_id)\n\
    \       message = Message(\"Hello World!\")\n       today = datetime.datetime.today()\n\
    \   # Schedule the message 5 days from today\n       sequence_numbers = sender.schedule(today\
    \ + datetime.timedelta(days=5),[message])\n\n   ````\n"
  syntax:
    content: schedule(schedule_time, *messages)
    parameters:
    - description: 'The date and time to enqueue the messages.

        '
      id: schedule_time
      type:
      - datetime.datetime
    - description: 'The messages to schedule.

        '
      id: messages
      type:
      - azure.servicebus.common.message.Message
    return:
      description: 'list[int]

        '
  type: method
  uid: azure.servicebus.send_handler.SessionSender.schedule
- class: azure.servicebus.send_handler.SessionSender
  fullName: azure.servicebus.send_handler.SessionSender.send
  langs:
  - python
  module: azure.servicebus.send_handler
  name: send(message)
  source:
    id: send
    path: azure-servicebus\azure\servicebus\send_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\send_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 199
  summary: "Sends a message and blocks until acknowledgement is\nreceived or operation\
    \ times out.\n\nSend a message and block<!--[!code-python[Main](ples\\test_examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\
    \\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   # Send the message via sender\n       message =\
    \ Message(\"Hello World!\")\n       sender.send(message)\n\n   ````\n"
  syntax:
    content: send(message)
    parameters:
    - description: 'The message to be sent.

        '
      id: message
      type:
      - azure.servicebus.common.message.Message
    return:
      description: 'The outcome of the message send ~uamqp.constants.MessageSendResult

        '
  type: method
  uid: azure.servicebus.send_handler.SessionSender.send
references:
- fullName: azure.servicebus.send_handler.SessionSender.queue_message
  isExternal: false
  name: queue_message(message)
  parent: azure.servicebus.send_handler.SessionSender
  uid: azure.servicebus.send_handler.SessionSender.queue_message
- fullName: azure.servicebus.send_handler.SessionSender.schedule
  isExternal: false
  name: schedule(schedule_time, *messages)
  parent: azure.servicebus.send_handler.SessionSender
  uid: azure.servicebus.send_handler.SessionSender.schedule
- fullName: azure.servicebus.send_handler.SessionSender.send
  isExternal: false
  name: send(message)
  parent: azure.servicebus.send_handler.SessionSender
  uid: azure.servicebus.send_handler.SessionSender.send
