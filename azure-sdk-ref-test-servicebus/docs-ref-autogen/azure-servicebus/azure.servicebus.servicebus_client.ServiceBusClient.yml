### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.servicebus_client.ServiceBusClient.from_connection_string
  - azure.servicebus.servicebus_client.ServiceBusClient.get_queue
  - azure.servicebus.servicebus_client.ServiceBusClient.get_subscription
  - azure.servicebus.servicebus_client.ServiceBusClient.get_topic
  - azure.servicebus.servicebus_client.ServiceBusClient.list_queues
  - azure.servicebus.servicebus_client.ServiceBusClient.list_subscriptions
  - azure.servicebus.servicebus_client.ServiceBusClient.list_topics
  class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "Create a new instance of the ServiceBus client<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   import os\n   from azure.servicebus\
    \ import ServiceBusClient\n\n   namespace = os.environ['SERVICE_BUS_HOSTNAME']\n\
    \   shared_access_policy = os.environ['SERVICE_BUS_SAS_POLICY']\n   shared_access_key\
    \ = os.environ['SERVICE_BUS_SAS_KEY']\n\n   # Create a new service bus client\
    \ using SAS credentials\n   client = ServiceBusClient(\n       service_namespace=namespace,\n\
    \       shared_access_key_name=shared_access_policy,\n       shared_access_key_value=shared_access_key)\n\
    \n\n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.servicebus.common.mixins.ServiceBusMixin
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: ServiceBusClient
  source:
    id: ServiceBusClient
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 35
  summary: 'Initializes the service bus service for a namespace with the specified

    authentication settings (SAS).








    '
  syntax:
    content: ServiceBusClient(service_namespace=None, host_base='.servicebus.windows.net',
      shared_access_key_name=None, shared_access_key_value=None, http_request_timeout=65,
      http_request_session=None, debug=False)
    parameters:
    - description: 'Service bus namespace, required for all operations.

        '
      id: service_namespace
      type:
      - str
    - description: 'Optional. Live host base url. Defaults to Public Azure.

        '
      id: host_base
      type:
      - str
    - description: 'SAS authentication key name.

        '
      id: shared_access_key_name
      type:
      - str
    - description: 'SAS authentication key value.

        '
      id: shared_access_key_value
      type:
      - str
    - description: 'Optional. Timeout for the http request, in seconds.

        Default value is 65 seconds.

        '
      id: http_request_timeout
      type:
      - int
    - description: 'Optional. Session object to use for http requests.

        '
      id: http_request_session
      type:
      - requests.Session
    - description: 'Whether to output AMQP network trace to the logger.

        '
      id: debug
      type:
      - bool
  type: class
  uid: azure.servicebus.servicebus_client.ServiceBusClient
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "Create a ServiceBusClient via a connection string.<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.servicebus import ServiceBusClient\n\
    \   connection_str = os.environ['SERVICE_BUS_CONNECTION_STR']\n\n   client = ServiceBusClient.from_connection_string(connection_str)\n\
    \n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.from_connection_string
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: from_connection_string(conn_str, **kwargs)
  source:
    id: from_connection_string
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 77
  summary: 'Create a ServiceBus client from a connection string.

    '
  syntax:
    content: from_connection_string(conn_str, **kwargs)
    parameters:
    - description: 'The connection string.

        '
      id: conn_str
      type:
      - str
    - id: conn_str
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.from_connection_string
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "Get the specific queue client from service bus client<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # Queue Client can be used to\
    \ send and receive messages\n   # from an Azure ServiceBus Service\n   queue_name\
    \ = 'MyQueue'\n   queue_client = client.get_queue(queue_name)\n\n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.get_queue
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: get_queue(queue_name)
  source:
    id: get_queue
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 106
  summary: 'Get a client for a queue entity.

    '
  syntax:
    content: get_queue(queue_name)
    parameters:
    - description: 'The name of the queue.

        '
      id: queue_name
      type:
      - str
    return:
      description: '~azure.servicebus.servicebus_client.QueueClient

        '
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.get_queue
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "Get the specific subscription client from service bus client<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # Subscription client can receivce\
    \ messages from Azure Service Bus subscription\n   subscription_name = 'MySubscription'\n\
    \   subscription_client = client.get_subscription(topic_name, subscription_name)\n\
    \n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.get_subscription
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: get_subscription(topic_name, subscription_name)
  source:
    id: get_subscription
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 224
  summary: 'Get a client for a subscription entity.

    '
  syntax:
    content: get_subscription(topic_name, subscription_name)
    parameters:
    - description: 'The name of the topic.

        '
      id: topic_name
      type:
      - str
    - description: 'The name of the subscription.

        '
      id: subscription_name
      type:
      - str
    return:
      description: '~azure.servicebus.servicebus_client.SubscriptionClient

        '
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.get_subscription
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "Get the specific topic client from service bus client<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # Topic Client can be used to\
    \ send messages to an Azure ServiceBus Service\n   topic_name = 'MyTopic'\n  \
    \ topic_client = client.get_topic(topic_name)\n\n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.get_topic
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: get_topic(topic_name)
  source:
    id: get_topic
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 166
  summary: 'Get a client for a topic entity.

    '
  syntax:
    content: get_topic(topic_name)
    parameters:
    - description: 'The name of the topic.

        '
      id: topic_name
      type:
      - str
    return:
      description: '~azure.servicebus.servicebus_client.TopicClient

        '
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.get_topic
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "List the queues from service bus client<!--[!code-python[Main](ples\\test_examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\
    \\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   queues = client.list_queues()\n   # Process the\
    \ queues\n   for queue_client in queues:\n       print(queue_client.name)\n\n\
    \   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.list_queues
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: list_queues()
  source:
    id: list_queues
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 137
  summary: 'Get clients for all queue entities in the namespace.

    '
  syntax:
    content: list_queues()
    parameters: []
    return:
      description: 'list[~azure.servicebus.servicebus_client.QueueClient]

        '
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.list_queues
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "List the subscriptions from service bus client<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   subscriptions = client.list_subscriptions(topic_name)\n\
    \   # Process subscriptions\n   for sub_client in subscriptions:\n       print(sub_client.name)\n\
    \n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.list_subscriptions
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: list_subscriptions(topic_name)
  source:
    id: list_subscriptions
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 256
  summary: 'Get a client for all subscription entities in the topic.

    '
  syntax:
    content: list_subscriptions(topic_name)
    parameters:
    - description: 'The topic to list subscriptions for.

        '
      id: topic_name
      type:
      - str
    return:
      description: 'list[~azure.servicebus.servicebus_client.SubscriptionClient]

        '
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.list_subscriptions
- class: azure.servicebus.servicebus_client.ServiceBusClient
  example:
  - "List the topics from service bus client<!--[!code-python[Main](ples\\test_examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\
    \\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   topics = client.list_topics()\n   # Process topics\n\
    \   for topic_client in topics:\n       print(topic_client.name)\n\n   ````\n"
  fullName: azure.servicebus.servicebus_client.ServiceBusClient.list_topics
  langs:
  - python
  module: azure.servicebus.servicebus_client
  name: list_topics()
  source:
    id: list_topics
    path: azure-servicebus\azure\servicebus\servicebus_client.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\servicebus_client.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 196
  summary: 'Get a client for all topic entities in the namespace.

    '
  syntax:
    content: list_topics()
    parameters: []
    return:
      description: 'list[~azure.servicebus.servicebus_client.TopicClient]

        '
  type: method
  uid: azure.servicebus.servicebus_client.ServiceBusClient.list_topics
references:
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, **kwargs)
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.from_connection_string
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.get_queue
  isExternal: false
  name: get_queue(queue_name)
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.get_queue
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.get_subscription
  isExternal: false
  name: get_subscription(topic_name, subscription_name)
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.get_subscription
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.get_topic
  isExternal: false
  name: get_topic(topic_name)
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.get_topic
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.list_queues
  isExternal: false
  name: list_queues()
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.list_queues
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.list_subscriptions
  isExternal: false
  name: list_subscriptions(topic_name)
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.list_subscriptions
- fullName: azure.servicebus.servicebus_client.ServiceBusClient.list_topics
  isExternal: false
  name: list_topics()
  parent: azure.servicebus.servicebus_client.ServiceBusClient
  uid: azure.servicebus.servicebus_client.ServiceBusClient.list_topics
