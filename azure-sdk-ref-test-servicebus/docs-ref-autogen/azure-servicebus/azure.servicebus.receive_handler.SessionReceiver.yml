### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.receive_handler.SessionReceiver.get_session_state
  - azure.servicebus.receive_handler.SessionReceiver.list_sessions
  - azure.servicebus.receive_handler.SessionReceiver.peek
  - azure.servicebus.receive_handler.SessionReceiver.receive_deferred_messages
  - azure.servicebus.receive_handler.SessionReceiver.renew_lock
  - azure.servicebus.receive_handler.SessionReceiver.set_session_state
  class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.servicebus.base_handler.BaseHandler
    type: azure.servicebus.receive_handler.Receiver
  - inheritance:
    - type: builtins.object
    type: azure.servicebus.common.mixins.SessionMixin
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: SessionReceiver
  source:
    id: SessionReceiver
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 370
  summary: '





    '
  syntax:
    content: SessionReceiver(handler_id, source, auth_config, session=None, connection=None,
      encoding='UTF-8', debug=False, **kwargs)
  type: class
  uid: azure.servicebus.receive_handler.SessionReceiver
- class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver.get_session_state
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: get_session_state()
  source:
    id: get_session_state
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 436
  summary: "Get the session state. Returns None if no state\nhas been set.\n\nGet\
    \ the session state of the receiver<!--[!code-python[Main](ples\\test_examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\
    \\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   # Get the session state\n       session_state =\
    \ session_receiver_client.get_session_state()\n\n   ````\n"
  syntax:
    content: get_session_state()
    parameters: []
    return:
      description: 'str

        '
  type: method
  uid: azure.servicebus.receive_handler.SessionReceiver.get_session_state
- class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver.list_sessions
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: list_sessions(updated_since=None, max_results=100, skip=0)
  source:
    id: list_sessions
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 574
  summary: "List the Session IDs with pending messages in the queue where the 'State'\
    \ of the session\nhas been updated since the timestamp provided. If no timestamp\
    \ is provided, all will be returned.\nIf the state of a Session has never been\
    \ set, it will not be returned regardless of whether\nthere are messages pending.\n\
    :param updated_since: The UTC datetime from which to return updated pending Session\
    \ IDs.\n:type updated_since: datetime.datetime\n:param max_results: The maximum\
    \ number of Session IDs to return. Default value is 100.\n:type max_results: int\n\
    :param skip: The page value to jump to. Default value is 0.\n:type skip: int\n\
    :returns: list[str]\n\nList the ids of sessions with pending messages<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # List sessions\n       session_ids\
    \ = session_receiver_client.list_sessions()\n\n   # List sessions updated after\
    \ specific time\n       today = datetime.datetime.today()\n       yesterday =\
    \ today - datetime.timedelta(days=1)\n       session_ids = session_receiver_client.list_sessions(updated_since=yesterday)\n\
    \n   ````\n"
  syntax:
    content: list_sessions(updated_since=None, max_results=100, skip=0)
    parameters:
    - defaultValue: None
      id: updated_since
    - defaultValue: '100'
      id: max_results
    - defaultValue: '0'
      id: skip
  type: method
  uid: azure.servicebus.receive_handler.SessionReceiver.list_sessions
- class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver.peek
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: peek(count=1, start_from=None)
  source:
    id: peek
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 499
  summary: "Browse messages pending in the session. This operation does not remove\n\
    messages from the queue, nor does it lock them.\n\nLook at pending messages in\
    \ the queue<!--[!code-python[Main](ples\\test_examples.py )]-->\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\\0\\\\azure-servicebus\\\
    \\examples\\\\test_examples.py\", \"xml:space\": \"preserve\", \"language\": \"\
    python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n\
    ````python\n\n   # Peek at specific number of messages\n       receiver_client.peek(count=5)\n\
    \n   ````\n"
  syntax:
    content: peek(count=1, start_from=None)
    parameters:
    - defaultValue: '1'
      description: 'How many message to try and peek.

        '
      id: count
      type:
      - int
    - defaultValue: None
      description: 'An enqueue timestamp from which to peek at messages.

        '
      id: start_from
      type:
      - datetime.datetime
    return:
      description: 'list[~azure.servicebus.common.message.PeekMessage]

        '
  type: method
  uid: azure.servicebus.receive_handler.SessionReceiver.peek
- class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver.receive_deferred_messages
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
    <ReceiverSettleMode.PeekLock: 1>>)'
  source:
    id: receive_deferred_messages
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 534
  summary: "Receive messages that have previously been deferred.\nDeferred messages\
    \ must have had same Session ID as the current receiver.\n\nGet the messages which\
    \ were previously deferred in the session<!--[!code-python[Main](ples\\test_examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_repo\\\
    \\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"xml:space\": \"preserve\"\
    , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   # Receive deferred messages \n   # Provide sequence\
    \ numbers of messages which were deferred.\n       receiver_client.receive_deferred_messages(sequence_numbers=seq_numbers)\n\
    \n   ````\n"
  syntax:
    content: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
      <ReceiverSettleMode.PeekLock: 1>>)'
    parameters:
    - description: 'A list of the sequence numbers of messages that have been

        deferred.

        '
      id: sequence_numbers
      type:
      - list[int]
    - defaultValue: ReceiveSettleMode.PeekLock
      description: 'The receive mode, default value is PeekLock.

        '
      id: mode
      type:
      - azure.servicebus.common.constants.ReceiveSettleMode
    return:
      description: 'list[~azure.servicebus.Message]

        '
  type: method
  uid: azure.servicebus.receive_handler.SessionReceiver.receive_deferred_messages
- class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver.renew_lock
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: renew_lock()
  source:
    id: renew_lock
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 481
  summary: "Renew session lock.\n\nRenew the session lock before it expires<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # Renew session lock before it\
    \ expires\n       session_receiver_client.renew_lock()\n\n   ````\n"
  syntax:
    content: renew_lock()
    parameters: []
  type: method
  uid: azure.servicebus.receive_handler.SessionReceiver.renew_lock
- class: azure.servicebus.receive_handler.SessionReceiver
  fullName: azure.servicebus.receive_handler.SessionReceiver.set_session_state
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: set_session_state(state)
  source:
    id: set_session_state
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 460
  summary: "Set the session state.\n\nSet the session state of the receiver<!--[!code-python[Main](ples\\\
    test_examples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\\
    s\\\\source_repo\\\\0\\\\azure-servicebus\\\\examples\\\\test_examples.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   # Set the session state\n    \
    \   session_receiver_client.set_session_state('START')\n\n   ````\n"
  syntax:
    content: set_session_state(state)
    parameters:
    - description: 'The state value.

        '
      id: state
      type:
      - str, bytes
      - bytearray
  type: method
  uid: azure.servicebus.receive_handler.SessionReceiver.set_session_state
references:
- fullName: azure.servicebus.receive_handler.SessionReceiver.get_session_state
  isExternal: false
  name: get_session_state()
  parent: azure.servicebus.receive_handler.SessionReceiver
  uid: azure.servicebus.receive_handler.SessionReceiver.get_session_state
- fullName: azure.servicebus.receive_handler.SessionReceiver.list_sessions
  isExternal: false
  name: list_sessions(updated_since=None, max_results=100, skip=0)
  parent: azure.servicebus.receive_handler.SessionReceiver
  uid: azure.servicebus.receive_handler.SessionReceiver.list_sessions
- fullName: azure.servicebus.receive_handler.SessionReceiver.peek
  isExternal: false
  name: peek(count=1, start_from=None)
  parent: azure.servicebus.receive_handler.SessionReceiver
  uid: azure.servicebus.receive_handler.SessionReceiver.peek
- fullName: azure.servicebus.receive_handler.SessionReceiver.receive_deferred_messages
  isExternal: false
  name: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
    <ReceiverSettleMode.PeekLock: 1>>)'
  parent: azure.servicebus.receive_handler.SessionReceiver
  uid: azure.servicebus.receive_handler.SessionReceiver.receive_deferred_messages
- fullName: azure.servicebus.receive_handler.SessionReceiver.renew_lock
  isExternal: false
  name: renew_lock()
  parent: azure.servicebus.receive_handler.SessionReceiver
  uid: azure.servicebus.receive_handler.SessionReceiver.renew_lock
- fullName: azure.servicebus.receive_handler.SessionReceiver.set_session_state
  isExternal: false
  name: set_session_state(state)
  parent: azure.servicebus.receive_handler.SessionReceiver
  uid: azure.servicebus.receive_handler.SessionReceiver.set_session_state
- fullName: list[int]
  name: list[int]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  uid: list[int]
- fullName: str, bytes
  name: str, bytes
  spec.python:
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: bytes
    name: bytes
    uid: bytes
  uid: str, bytes
