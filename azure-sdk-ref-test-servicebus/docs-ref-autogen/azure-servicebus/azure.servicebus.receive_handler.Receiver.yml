### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.receive_handler.Receiver.close
  - azure.servicebus.receive_handler.Receiver.fetch_next
  - azure.servicebus.receive_handler.Receiver.next
  - azure.servicebus.receive_handler.Receiver.open
  - azure.servicebus.receive_handler.Receiver.peek
  - azure.servicebus.receive_handler.Receiver.queue_size
  - azure.servicebus.receive_handler.Receiver.receive_deferred_messages
  class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.servicebus.base_handler.BaseHandler
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: Receiver
  source:
    id: Receiver
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 40
  summary: 'Implements a Receiver.









    '
  syntax:
    content: 'Receiver(handler_id, source, auth_config, connection=None, mode=<ReceiveSettleMode.PeekLock:
      <ReceiverSettleMode.PeekLock: 1>>, encoding=''UTF-8'', debug=False, **kwargs)'
  type: class
  uid: azure.servicebus.receive_handler.Receiver
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.close
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: close(exception=None)
  source:
    id: close
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 252
  summary: 'Close handler connection.

    '
  syntax:
    content: close(exception=None)
    parameters:
    - defaultValue: None
      id: exception
  type: method
  uid: azure.servicebus.receive_handler.Receiver.close
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.fetch_next
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: fetch_next(max_batch_size=None, timeout=None)
  source:
    id: fetch_next
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 261
  summary: 'Receive messages from ServiceBus entity.

    '
  syntax:
    content: fetch_next(max_batch_size=None, timeout=None)
    parameters:
    - defaultValue: None
      description: 'Receive a batch of messages. Batch size will

        be up to the maximum specified, but will return as soon as service

        returns no new messages. If combined with a timeout and no messages are

        retrieve before the time, the result will be empty. If no batch

        size is supplied, the prefetch size will be the maximum.

        '
      id: max_batch_size
      type:
      - int
    - defaultValue: None
      id: timeout
    return:
      description: 'list[~azure.servicebus.Message]

        '
  type: method
  uid: azure.servicebus.receive_handler.Receiver.fetch_next
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.next
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: next()
  source:
    id: next
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 148
  syntax:
    content: next()
    parameters: []
  type: method
  uid: azure.servicebus.receive_handler.Receiver.next
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.open
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: open()
  source:
    id: open
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 232
  summary: 'Open handler connection.

    '
  syntax:
    content: open()
    parameters: []
  type: method
  uid: azure.servicebus.receive_handler.Receiver.open
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.peek
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: peek(count=1, start_from=None)
  source:
    id: peek
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 175
  summary: 'Browse messages pending in the queue. This operation does not remove

    messages from the queue, nor does it lock them.

    '
  syntax:
    content: peek(count=1, start_from=None)
    parameters:
    - defaultValue: '1'
      description: 'How many message to try and peek.

        '
      id: count
      type:
      - int
    - defaultValue: None
      description: 'An enqueue timestamp from which to peek at messages.

        '
      id: start_from
      type:
      - datetime.datetime
    return:
      description: 'list[~azure.servicebus.common.message.PeekMessage]

        '
  type: method
  uid: azure.servicebus.receive_handler.Receiver.peek
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.queue_size
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: queue_size
  source:
    id: queue_size
    path: null
    remote:
      branch: servicebus
      path: null
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: null
  summary: 'The current size of the unprocessed message queue.

    :returns: int

    '
  syntax: {}
  type: attribute
  uid: azure.servicebus.receive_handler.Receiver.queue_size
- class: azure.servicebus.receive_handler.Receiver
  fullName: azure.servicebus.receive_handler.Receiver.receive_deferred_messages
  langs:
  - python
  module: azure.servicebus.receive_handler
  name: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
    <ReceiverSettleMode.PeekLock: 1>>)'
  source:
    id: receive_deferred_messages
    path: azure-servicebus\azure\servicebus\receive_handler.py
    remote:
      branch: servicebus
      path: azure-servicebus\azure\servicebus\receive_handler.py
      repo: https://github.com/annatisch/azure-sdk-for-python
    startLine: 202
  summary: 'Receive messages that have previously been deferred.

    '
  syntax:
    content: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
      <ReceiverSettleMode.PeekLock: 1>>)'
    parameters:
    - description: 'A list of the sequence numbers of messages that have been

        deferred.

        '
      id: sequence_numbers
      type:
      - list[int]
    - defaultValue: ReceiveSettleMode.PeekLock
      description: 'The receive mode, default value is PeekLock.

        '
      id: mode
      type:
      - azure.servicebus.common.constants.ReceiveSettleMode
    return:
      description: 'list[~azure.servicebus.Message]

        '
  type: method
  uid: azure.servicebus.receive_handler.Receiver.receive_deferred_messages
references:
- fullName: azure.servicebus.receive_handler.Receiver.close
  isExternal: false
  name: close(exception=None)
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.close
- fullName: azure.servicebus.receive_handler.Receiver.fetch_next
  isExternal: false
  name: fetch_next(max_batch_size=None, timeout=None)
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.fetch_next
- fullName: azure.servicebus.receive_handler.Receiver.next
  isExternal: false
  name: next()
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.next
- fullName: azure.servicebus.receive_handler.Receiver.open
  isExternal: false
  name: open()
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.open
- fullName: azure.servicebus.receive_handler.Receiver.peek
  isExternal: false
  name: peek(count=1, start_from=None)
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.peek
- fullName: azure.servicebus.receive_handler.Receiver.queue_size
  isExternal: false
  name: queue_size
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.queue_size
- fullName: azure.servicebus.receive_handler.Receiver.receive_deferred_messages
  isExternal: false
  name: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
    <ReceiverSettleMode.PeekLock: 1>>)'
  parent: azure.servicebus.receive_handler.Receiver
  uid: azure.servicebus.receive_handler.Receiver.receive_deferred_messages
- fullName: list[int]
  name: list[int]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  uid: list[int]
