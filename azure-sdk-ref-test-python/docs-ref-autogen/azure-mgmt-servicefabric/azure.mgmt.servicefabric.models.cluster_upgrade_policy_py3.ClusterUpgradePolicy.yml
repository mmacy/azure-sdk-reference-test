### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.servicefabric.models.cluster_upgrade_policy_py3.ClusterUpgradePolicy
  fullName: azure.mgmt.servicefabric.models.cluster_upgrade_policy_py3.ClusterUpgradePolicy
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.servicefabric.models.cluster_upgrade_policy_py3
  name: ClusterUpgradePolicy
  source:
    id: ClusterUpgradePolicy
    path: azure-mgmt-servicefabric\azure\mgmt\servicefabric\models\cluster_upgrade_policy_py3.py
    remote:
      branch: northstar
      path: azure-mgmt-servicefabric\azure\mgmt\servicefabric\models\cluster_upgrade_policy_py3.py
      repo: https://github.com/mmacy/azure-sdk-for-python
    startLine: 15
  summary: 'Describes the policy used when upgrading the cluster.


    All required parameters must be populated in order to send to Azure.

    '
  syntax:
    content: 'ClusterUpgradePolicy(*, upgrade_replica_set_check_timeout: str, health_check_wait_duration:
      str, health_check_stable_duration: str, health_check_retry_timeout: str, upgrade_timeout:
      str, upgrade_domain_timeout: str, health_policy, force_restart: bool = None,
      delta_health_policy=None, **kwargs) -> None'
    parameters:
    - description: 'If true, then processes are forcefully restarted

        during upgrade even when the code version has not changed (the upgrade

        only changes configuration or data).

        '
      id: force_restart
      type:
      - bool
    - description: 'Required. The maximum amount of

        time to block processing of an upgrade domain and revent loss of

        availability when there are unexpected issues. When this timeout expires,

        processing of the upgrade domain will proceed regardless of availability

        loss issues. The timeout is reset at the start of each upgrade domain. The

        timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.

        '
      id: upgrade_replica_set_check_timeout
      type:
      - str
    - description: 'Required. The length of time to wait

        after completing an upgrade domain before performing health checks. The

        duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.

        '
      id: health_check_wait_duration
      type:
      - str
    - description: 'Required. The amount of time that the

        application or cluster must remain healthy before the upgrade proceeds to

        the next upgrade domain. The duration can be in either hh:mm:ss or in

        d.hh:mm:ss.ms format.

        '
      id: health_check_stable_duration
      type:
      - str
    - description: 'Required. The amount of time to retry

        health evaluation when the application or cluster is unhealthy before the

        upgrade rolls back. The timeout can be in either hh:mm:ss or in

        d.hh:mm:ss.ms format.

        '
      id: health_check_retry_timeout
      type:
      - str
    - description: 'Required. The amount of time the overall upgrade

        has to complete before the upgrade rolls back. The timeout can be in

        either hh:mm:ss or in d.hh:mm:ss.ms format.

        '
      id: upgrade_timeout
      type:
      - str
    - description: 'Required. The amount of time each upgrade

        domain has to complete before the upgrade rolls back. The timeout can be

        in either hh:mm:ss or in d.hh:mm:ss.ms format.

        '
      id: upgrade_domain_timeout
      type:
      - str
    - description: 'Required. The cluster health policy used when

        upgrading the cluster.

        '
      id: health_policy
      type:
      - azure.mgmt.servicefabric.models.ClusterHealthPolicy
    - description: 'The delta health policy used when upgrading

        the cluster.

        '
      id: delta_health_policy
      type:
      - azure.mgmt.servicefabric.models.ClusterUpgradeDeltaHealthPolicy
  type: class
  uid: azure.mgmt.servicefabric.models.cluster_upgrade_policy_py3.ClusterUpgradePolicy
references: []
