<Overview>
  <Assemblies>
    <Assembly Name="Microsoft.Azure.Batch" Version="9.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 b5 fc 90 e7 02 7f 67 87 1e 77 3a 8f de 89 38 c8 1d d4 02 ba 65 b9 20 1d 60 59 3e 96 c4 92 65 1e 88 9c c1 3f 14 15 eb b5 3f ac 11 31 ae 0b d3 33 c5 ee 60 21 67 2d 97 18 ea 31 a8 ae bd 0d a0 07 2f 25 d8 7d ba 6f c9 0f fd 59 8e d4 da 35 e4 4c 39 8c 45 43 07 e8 e3 3b 84 26 14 3d ae c9 f5 96 83 6f 97 c8 f7 47 50 e5 97 5c 64 e2 18 9f 45 de f4 6b 2a 2b 12 47 ad c3 65 2b f5 c3 08 05 5d a9 ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.Default | System.Diagnostics.DebuggableAttribute+DebuggingModes.DisableOptimizations | System.Diagnostics.DebuggableAttribute+DebuggingModes.EnableEditAndContinue | System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Microsoft Corporation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("Client library for interacting with the Azure Batch service.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("9.0.1.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("9.0.1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft Azure")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Azure.Batch")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("Azure.Batch.Unit.Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETFramework,Version=v4.5.2", FrameworkDisplayName=".NET Framework 4.5.2")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Microsoft.Azure.Batch">
      <Type Name="AddTaskCollectionResultHandler" Kind="Class" />
      <Type Name="AddTaskCollectionTerminatedException" Kind="Class" />
      <Type Name="AddTaskResult" Kind="Class" />
      <Type Name="AddTaskResultStatus" Kind="Enumeration" />
      <Type Name="AffinityInformation" Kind="Class" />
      <Type Name="ApplicationOperations" Kind="Class" />
      <Type Name="ApplicationPackageReference" Kind="Class" />
      <Type Name="ApplicationSummary" Kind="Class" />
      <Type Name="AuthenticationTokenSettings" Kind="Class" />
      <Type Name="AutoPoolSpecification" Kind="Class" />
      <Type Name="AutoScaleRun" Kind="Class" />
      <Type Name="AutoScaleRunError" Kind="Class" />
      <Type Name="AutoUserSpecification" Kind="Class" />
      <Type Name="BatchClient" Kind="Class" />
      <Type Name="BatchClientBehavior" Kind="Class" />
      <Type Name="BatchClientException" Kind="Class" />
      <Type Name="BatchClientParallelOptions" Kind="Class" />
      <Type Name="BatchError" Kind="Class" />
      <Type Name="BatchErrorDetail" Kind="Class" />
      <Type Name="BatchErrorMessages" Kind="Class" />
      <Type Name="BatchRequestTimeout" Kind="Class" />
      <Type Name="Certificate" Kind="Class" />
      <Type Name="CertificateOperations" Kind="Class" />
      <Type Name="CertificateReference" Kind="Class" />
      <Type Name="ClientRequestIdProvider" Kind="Class" />
      <Type Name="CloudJob" Kind="Class" />
      <Type Name="CloudJobSchedule" Kind="Class" />
      <Type Name="CloudPool" Kind="Class" />
      <Type Name="CloudServiceConfiguration" Kind="Class" />
      <Type Name="CloudTask" Kind="Class" />
      <Type Name="ComputeNode" Kind="Class" />
      <Type Name="ComputeNodeEndpointConfiguration" Kind="Class" />
      <Type Name="ComputeNodeError" Kind="Class" />
      <Type Name="ComputeNodeInformation" Kind="Class" />
      <Type Name="ComputeNodeUser" Kind="Class" />
      <Type Name="ComputeNodeUserCommitSemantics" Kind="Enumeration" />
      <Type Name="Constants" Kind="Class" />
      <Type Name="ContainerConfiguration" Kind="Class" />
      <Type Name="ContainerRegistry" Kind="Class" />
      <Type Name="DataDisk" Kind="Class" />
      <Type Name="DeleteCertificateError" Kind="Class" />
      <Type Name="DetailLevel" Kind="Class" />
      <Type Name="EnvironmentSetting" Kind="Class" />
      <Type Name="ErrorMessage" Kind="Class" />
      <Type Name="ExitCodeMapping" Kind="Class" />
      <Type Name="ExitCodeRangeMapping" Kind="Class" />
      <Type Name="ExitConditions" Kind="Class" />
      <Type Name="ExitOptions" Kind="Class" />
      <Type Name="FileProperties" Kind="Class" />
      <Type Name="GetFileRequestByteRange" Kind="Class" />
      <Type Name="IFileStagingArtifact" Kind="Interface" />
      <Type Name="IInheritedBehaviors" Kind="Interface" />
      <Type Name="ImageReference" Kind="Class" />
      <Type Name="InboundEndpoint" Kind="Class" />
      <Type Name="InboundNatPool" Kind="Class" />
      <Type Name="IPagedEnumerable`1" DisplayName="IPagedEnumerable&lt;T&gt;" Kind="Interface" />
      <Type Name="IPagedEnumerator`1" DisplayName="IPagedEnumerator&lt;T&gt;" Kind="Interface" />
      <Type Name="IRefreshable" Kind="Interface" />
      <Type Name="JobConstraints" Kind="Class" />
      <Type Name="JobExecutionInformation" Kind="Class" />
      <Type Name="JobManagerTask" Kind="Class" />
      <Type Name="JobOperations" Kind="Class" />
      <Type Name="JobPreparationAndReleaseTaskExecutionInformation" Kind="Class" />
      <Type Name="JobPreparationTask" Kind="Class" />
      <Type Name="JobPreparationTaskExecutionInformation" Kind="Class" />
      <Type Name="JobReleaseTask" Kind="Class" />
      <Type Name="JobReleaseTaskExecutionInformation" Kind="Class" />
      <Type Name="JobScheduleExecutionInformation" Kind="Class" />
      <Type Name="JobScheduleOperations" Kind="Class" />
      <Type Name="JobScheduleStatistics" Kind="Class" />
      <Type Name="JobSchedulingError" Kind="Class" />
      <Type Name="JobSpecification" Kind="Class" />
      <Type Name="JobStatistics" Kind="Class" />
      <Type Name="LinuxUserConfiguration" Kind="Class" />
      <Type Name="MetadataItem" Kind="Class" />
      <Type Name="MultiInstanceSettings" Kind="Class" />
      <Type Name="NameValuePair" Kind="Class" />
      <Type Name="NetworkConfiguration" Kind="Class" />
      <Type Name="NetworkSecurityGroupRule" Kind="Class" />
      <Type Name="NodeAgentInformation" Kind="Class" />
      <Type Name="NodeAgentSku" Kind="Class" />
      <Type Name="NodeCounts" Kind="Class" />
      <Type Name="NodeFile" Kind="Class" />
      <Type Name="ODATADetailLevel" Kind="Class" />
      <Type Name="ODATAMonitorControl" Kind="Class" />
      <Type Name="OSDisk" Kind="Class" />
      <Type Name="OutputFile" Kind="Class" />
      <Type Name="OutputFileBlobContainerDestination" Kind="Class" />
      <Type Name="OutputFileDestination" Kind="Class" />
      <Type Name="OutputFileUploadOptions" Kind="Class" />
      <Type Name="PagedEnumerableExtensions" Kind="Class" />
      <Type Name="ParallelOperationsException" Kind="Class" />
      <Type Name="PoolEndpointConfiguration" Kind="Class" />
      <Type Name="PoolInformation" Kind="Class" />
      <Type Name="PoolNodeCounts" Kind="Class" />
      <Type Name="PoolOperations" Kind="Class" />
      <Type Name="PoolSpecification" Kind="Class" />
      <Type Name="PoolStatistics" Kind="Class" />
      <Type Name="PoolUsageMetrics" Kind="Class" />
      <Type Name="RecentJob" Kind="Class" />
      <Type Name="RemoteLoginSettings" Kind="Class" />
      <Type Name="ResizeError" Kind="Class" />
      <Type Name="ResourceFile" Kind="Class" />
      <Type Name="ResourceStatistics" Kind="Class" />
      <Type Name="RetryPolicyProvider" Kind="Class" />
      <Type Name="Schedule" Kind="Class" />
      <Type Name="StartTask" Kind="Class" />
      <Type Name="StartTaskInformation" Kind="Class" />
      <Type Name="SubtaskInformation" Kind="Class" />
      <Type Name="SynchronousMethodExceptionBehavior" Kind="Class" />
      <Type Name="TaskConstraints" Kind="Class" />
      <Type Name="TaskContainerExecutionInformation" Kind="Class" />
      <Type Name="TaskContainerSettings" Kind="Class" />
      <Type Name="TaskCounts" Kind="Class" />
      <Type Name="TaskDependencies" Kind="Class" />
      <Type Name="TaskExecutionInformation" Kind="Class" />
      <Type Name="TaskFailureInformation" Kind="Class" />
      <Type Name="TaskIdRange" Kind="Class" />
      <Type Name="TaskInformation" Kind="Class" />
      <Type Name="TaskSchedulingPolicy" Kind="Class" />
      <Type Name="TaskStateMonitor" Kind="Class" />
      <Type Name="TaskStatistics" Kind="Class" />
      <Type Name="UploadBatchServiceLogsResult" Kind="Class" />
      <Type Name="UsageStatistics" Kind="Class" />
      <Type Name="UserAccount" Kind="Class" />
      <Type Name="UserIdentity" Kind="Class" />
      <Type Name="Utilities" Kind="Class" />
      <Type Name="VirtualMachineConfiguration" Kind="Class" />
      <Type Name="WindowsConfiguration" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Batch.Auth">
      <Type Name="BatchCredentials" Kind="Class" />
      <Type Name="BatchSharedKeyCredentials" Kind="Class" />
      <Type Name="BatchTokenCredentials" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Batch.Common">
      <Type Name="AccessScope" Kind="Enumeration" />
      <Type Name="AddTaskStatus" Kind="Enumeration" />
      <Type Name="AllocationState" Kind="Enumeration" />
      <Type Name="AutoUserScope" Kind="Enumeration" />
      <Type Name="BatchErrorCodeStrings" Kind="Class" />
      <Type Name="BatchException" Kind="Class" />
      <Type Name="CachingType" Kind="Enumeration" />
      <Type Name="CertificateFormat" Kind="Enumeration" />
      <Type Name="CertificateState" Kind="Enumeration" />
      <Type Name="CertificateVisibility" Kind="Enumeration" />
      <Type Name="CertStoreLocation" Kind="Enumeration" />
      <Type Name="ComputeNodeDeallocationOption" Kind="Enumeration" />
      <Type Name="ComputeNodeFillType" Kind="Enumeration" />
      <Type Name="ComputeNodeRebootOption" Kind="Enumeration" />
      <Type Name="ComputeNodeReimageOption" Kind="Enumeration" />
      <Type Name="ComputeNodeState" Kind="Enumeration" />
      <Type Name="DependencyAction" Kind="Enumeration" />
      <Type Name="DisableComputeNodeSchedulingOption" Kind="Enumeration" />
      <Type Name="DisableJobOption" Kind="Enumeration" />
      <Type Name="ElevationLevel" Kind="Enumeration" />
      <Type Name="ErrorCategory" Kind="Enumeration" />
      <Type Name="ExponentialRetry" Kind="Class" />
      <Type Name="InboundEndpointProtocol" Kind="Enumeration" />
      <Type Name="IRetryPolicy" Kind="Interface" />
      <Type Name="JobAction" Kind="Enumeration" />
      <Type Name="JobPreparationTaskState" Kind="Enumeration" />
      <Type Name="JobReleaseTaskState" Kind="Enumeration" />
      <Type Name="JobScheduleState" Kind="Enumeration" />
      <Type Name="JobSchedulingErrorCodes" Kind="Class" />
      <Type Name="JobState" Kind="Enumeration" />
      <Type Name="LinearRetry" Kind="Class" />
      <Type Name="NetworkSecurityGroupRuleAccess" Kind="Enumeration" />
      <Type Name="NoRetry" Kind="Class" />
      <Type Name="OnAllTasksComplete" Kind="Enumeration" />
      <Type Name="OnTaskFailure" Kind="Enumeration" />
      <Type Name="OperationContext" Kind="Class" />
      <Type Name="OSType" Kind="Enumeration" />
      <Type Name="OutputFileUploadCondition" Kind="Enumeration" />
      <Type Name="PoolLifetimeOption" Kind="Enumeration" />
      <Type Name="PoolResizeErrorCodes" Kind="Class" />
      <Type Name="PoolState" Kind="Enumeration" />
      <Type Name="RequestInformation" Kind="Class" />
      <Type Name="RequestResult" Kind="Class" />
      <Type Name="RetryDecision" Kind="Class" />
      <Type Name="SchedulingState" Kind="Enumeration" />
      <Type Name="StartTaskState" Kind="Enumeration" />
      <Type Name="StorageAccountType" Kind="Enumeration" />
      <Type Name="SubtaskState" Kind="Enumeration" />
      <Type Name="TaskExecutionResult" Kind="Enumeration" />
      <Type Name="TaskFailureInformationCodes" Kind="Class" />
      <Type Name="TaskState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Batch.FileStaging">
      <Type Name="Constants" Kind="Class" />
      <Type Name="IFileStagingProvider" Kind="Interface" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Batch.Protocol">
      <Type Name="AccountOperationsExtensions" Kind="Class" />
      <Type Name="ApplicationOperationsExtensions" Kind="Class" />
      <Type Name="BatchRequest`2" DisplayName="BatchRequest&lt;TOptions,TResponse&gt;" Kind="Class" />
      <Type Name="BatchRequest`3" DisplayName="BatchRequest&lt;TBody,TOptions,TResponse&gt;" Kind="Class" />
      <Type Name="BatchRequestBase`2" DisplayName="BatchRequestBase&lt;TOptions,TResponse&gt;" Kind="Class" />
      <Type Name="BatchRequestModificationInterceptHandler" Kind="Delegate" />
      <Type Name="BatchRequestReplacementInterceptHandler" Kind="Delegate" />
      <Type Name="BatchServiceClient" Kind="Class" />
      <Type Name="BatchSharedKeyCredential" Kind="Class" />
      <Type Name="BatchTokenProvider" Kind="Class" />
      <Type Name="CertificateOperationsExtensions" Kind="Class" />
      <Type Name="ComputeNodeOperationsExtensions" Kind="Class" />
      <Type Name="FileOperationsExtensions" Kind="Class" />
      <Type Name="IAccountOperations" Kind="Interface" />
      <Type Name="IApplicationOperations" Kind="Interface" />
      <Type Name="IBatchRequest" Kind="Interface" />
      <Type Name="IBatchRequest`1" DisplayName="IBatchRequest&lt;TResponse&gt;" Kind="Interface" />
      <Type Name="IBatchServiceClient" Kind="Interface" />
      <Type Name="ICertificateOperations" Kind="Interface" />
      <Type Name="IComputeNodeOperations" Kind="Interface" />
      <Type Name="IFileOperations" Kind="Interface" />
      <Type Name="IJobOperations" Kind="Interface" />
      <Type Name="IJobScheduleOperations" Kind="Interface" />
      <Type Name="IPoolOperations" Kind="Interface" />
      <Type Name="ITaskOperations" Kind="Interface" />
      <Type Name="JobOperationsExtensions" Kind="Class" />
      <Type Name="JobScheduleOperationsExtensions" Kind="Class" />
      <Type Name="LogLevel" Kind="Enumeration" />
      <Type Name="PoolOperationsExtensions" Kind="Class" />
      <Type Name="RequestInterceptor" Kind="Class" />
      <Type Name="RequestReplacementInterceptor" Kind="Class" />
      <Type Name="ResponseInterceptor" Kind="Class" />
      <Type Name="ResponseInterceptor+BatchResponseInterceptHandler" Kind="Delegate" />
      <Type Name="TaskOperationsExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Batch.Protocol.BatchRequests">
      <Type Name="AccountListNodeAgentSkusBatchRequest" Kind="Class" />
      <Type Name="AccountListNodeAgentSkusNextBatchRequest" Kind="Class" />
      <Type Name="AccountListPoolNodeCountsBatchRequest" Kind="Class" />
      <Type Name="AccountListPoolNodeCountsNextBatchRequest" Kind="Class" />
      <Type Name="ApplicationGetBatchRequest" Kind="Class" />
      <Type Name="ApplicationListBatchRequest" Kind="Class" />
      <Type Name="ApplicationListNextBatchRequest" Kind="Class" />
      <Type Name="CertificateAddBatchRequest" Kind="Class" />
      <Type Name="CertificateCancelDeletionBatchRequest" Kind="Class" />
      <Type Name="CertificateDeleteBatchRequest" Kind="Class" />
      <Type Name="CertificateGetBatchRequest" Kind="Class" />
      <Type Name="CertificateListBatchRequest" Kind="Class" />
      <Type Name="CertificateListNextBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeAddUserBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeDeleteUserBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeDisableSchedulingBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeEnableSchedulingBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeGetBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteDesktopBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteLoginSettingsBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeListBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeListNextBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeRebootBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeReimageBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeUpdateUserBatchRequest" Kind="Class" />
      <Type Name="ComputeNodeUploadBatchServiceLogsBatchRequest" Kind="Class" />
      <Type Name="FileDeleteFromComputeNodeBatchRequest" Kind="Class" />
      <Type Name="FileDeleteFromTaskBatchRequest" Kind="Class" />
      <Type Name="FileGetFromComputeNodeBatchRequest" Kind="Class" />
      <Type Name="FileGetFromTaskBatchRequest" Kind="Class" />
      <Type Name="FileGetNodeFilePropertiesFromComputeNodeBatchRequest" Kind="Class" />
      <Type Name="FileGetNodeFilePropertiesFromTaskBatchRequest" Kind="Class" />
      <Type Name="FileListFromComputeNodeBatchRequest" Kind="Class" />
      <Type Name="FileListFromComputeNodeNextBatchRequest" Kind="Class" />
      <Type Name="FileListFromTaskBatchRequest" Kind="Class" />
      <Type Name="FileListFromTaskNextBatchRequest" Kind="Class" />
      <Type Name="JobAddBatchRequest" Kind="Class" />
      <Type Name="JobDeleteBatchRequest" Kind="Class" />
      <Type Name="JobDisableBatchRequest" Kind="Class" />
      <Type Name="JobEnableBatchRequest" Kind="Class" />
      <Type Name="JobGetAllJobsLifetimeStatisticsBatchRequest" Kind="Class" />
      <Type Name="JobGetBatchRequest" Kind="Class" />
      <Type Name="JobGetTaskCountsBatchRequest" Kind="Class" />
      <Type Name="JobListBatchRequest" Kind="Class" />
      <Type Name="JobListFromJobScheduleBatchRequest" Kind="Class" />
      <Type Name="JobListFromJobScheduleNextBatchRequest" Kind="Class" />
      <Type Name="JobListNextBatchRequest" Kind="Class" />
      <Type Name="JobListPreparationAndReleaseTaskStatusBatchRequest" Kind="Class" />
      <Type Name="JobListPreparationAndReleaseTaskStatusNextBatchRequest" Kind="Class" />
      <Type Name="JobPatchBatchRequest" Kind="Class" />
      <Type Name="JobScheduleAddBatchRequest" Kind="Class" />
      <Type Name="JobScheduleDeleteBatchRequest" Kind="Class" />
      <Type Name="JobScheduleDisableBatchRequest" Kind="Class" />
      <Type Name="JobScheduleEnableBatchRequest" Kind="Class" />
      <Type Name="JobScheduleExistsBatchRequest" Kind="Class" />
      <Type Name="JobScheduleGetBatchRequest" Kind="Class" />
      <Type Name="JobScheduleListBatchRequest" Kind="Class" />
      <Type Name="JobScheduleListNextBatchRequest" Kind="Class" />
      <Type Name="JobSchedulePatchBatchRequest" Kind="Class" />
      <Type Name="JobScheduleTerminateBatchRequest" Kind="Class" />
      <Type Name="JobScheduleUpdateBatchRequest" Kind="Class" />
      <Type Name="JobTerminateBatchRequest" Kind="Class" />
      <Type Name="JobUpdateBatchRequest" Kind="Class" />
      <Type Name="PoolAddBatchRequest" Kind="Class" />
      <Type Name="PoolDeleteBatchRequest" Kind="Class" />
      <Type Name="PoolDisableAutoScaleBatchRequest" Kind="Class" />
      <Type Name="PoolEnableAutoScaleBatchRequest" Kind="Class" />
      <Type Name="PoolEvaluateAutoScaleBatchRequest" Kind="Class" />
      <Type Name="PoolExistsBatchRequest" Kind="Class" />
      <Type Name="PoolGetAllPoolsLifetimeStatisticsBatchRequest" Kind="Class" />
      <Type Name="PoolGetBatchRequest" Kind="Class" />
      <Type Name="PoolListBatchRequest" Kind="Class" />
      <Type Name="PoolListNextBatchRequest" Kind="Class" />
      <Type Name="PoolListPoolUsageMetricsBatchRequest" Kind="Class" />
      <Type Name="PoolListPoolUsageMetricsNextBatchRequest" Kind="Class" />
      <Type Name="PoolPatchBatchRequest" Kind="Class" />
      <Type Name="PoolRemoveNodesBatchRequest" Kind="Class" />
      <Type Name="PoolResizeBatchRequest" Kind="Class" />
      <Type Name="PoolStopResizeBatchRequest" Kind="Class" />
      <Type Name="PoolUpdatePropertiesBatchRequest" Kind="Class" />
      <Type Name="PoolUpgradeOSBatchRequest" Kind="Class" />
      <Type Name="TaskAddBatchRequest" Kind="Class" />
      <Type Name="TaskAddCollectionBatchRequest" Kind="Class" />
      <Type Name="TaskDeleteBatchRequest" Kind="Class" />
      <Type Name="TaskGetBatchRequest" Kind="Class" />
      <Type Name="TaskListBatchRequest" Kind="Class" />
      <Type Name="TaskListNextBatchRequest" Kind="Class" />
      <Type Name="TaskListSubtasksBatchRequest" Kind="Class" />
      <Type Name="TaskReactivateBatchRequest" Kind="Class" />
      <Type Name="TaskTerminateBatchRequest" Kind="Class" />
      <Type Name="TaskUpdateBatchRequest" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Azure.Batch.Protocol.Models">
      <Type Name="AccessScope" Kind="Enumeration" />
      <Type Name="AccountListNodeAgentSkusHeaders" Kind="Class" />
      <Type Name="AccountListNodeAgentSkusNextOptions" Kind="Class" />
      <Type Name="AccountListNodeAgentSkusOptions" Kind="Class" />
      <Type Name="AccountListPoolNodeCountsHeaders" Kind="Class" />
      <Type Name="AccountListPoolNodeCountsNextOptions" Kind="Class" />
      <Type Name="AccountListPoolNodeCountsOptions" Kind="Class" />
      <Type Name="AffinityInformation" Kind="Class" />
      <Type Name="AllocationState" Kind="Enumeration" />
      <Type Name="ApplicationGetHeaders" Kind="Class" />
      <Type Name="ApplicationGetOptions" Kind="Class" />
      <Type Name="ApplicationListHeaders" Kind="Class" />
      <Type Name="ApplicationListNextOptions" Kind="Class" />
      <Type Name="ApplicationListOptions" Kind="Class" />
      <Type Name="ApplicationPackageReference" Kind="Class" />
      <Type Name="ApplicationSummary" Kind="Class" />
      <Type Name="AuthenticationTokenSettings" Kind="Class" />
      <Type Name="AutoPoolSpecification" Kind="Class" />
      <Type Name="AutoScaleRun" Kind="Class" />
      <Type Name="AutoScaleRunError" Kind="Class" />
      <Type Name="AutoUserScope" Kind="Enumeration" />
      <Type Name="AutoUserSpecification" Kind="Class" />
      <Type Name="BatchError" Kind="Class" />
      <Type Name="BatchErrorDetail" Kind="Class" />
      <Type Name="BatchErrorException" Kind="Class" />
      <Type Name="CachingType" Kind="Enumeration" />
      <Type Name="Certificate" Kind="Class" />
      <Type Name="CertificateAddHeaders" Kind="Class" />
      <Type Name="CertificateAddOptions" Kind="Class" />
      <Type Name="CertificateAddParameter" Kind="Class" />
      <Type Name="CertificateCancelDeletionHeaders" Kind="Class" />
      <Type Name="CertificateCancelDeletionOptions" Kind="Class" />
      <Type Name="CertificateDeleteHeaders" Kind="Class" />
      <Type Name="CertificateDeleteOptions" Kind="Class" />
      <Type Name="CertificateFormat" Kind="Enumeration" />
      <Type Name="CertificateGetHeaders" Kind="Class" />
      <Type Name="CertificateGetOptions" Kind="Class" />
      <Type Name="CertificateListHeaders" Kind="Class" />
      <Type Name="CertificateListNextOptions" Kind="Class" />
      <Type Name="CertificateListOptions" Kind="Class" />
      <Type Name="CertificateReference" Kind="Class" />
      <Type Name="CertificateState" Kind="Enumeration" />
      <Type Name="CertificateStoreLocation" Kind="Enumeration" />
      <Type Name="CertificateVisibility" Kind="Enumeration" />
      <Type Name="CloudJob" Kind="Class" />
      <Type Name="CloudJobSchedule" Kind="Class" />
      <Type Name="CloudPool" Kind="Class" />
      <Type Name="CloudServiceConfiguration" Kind="Class" />
      <Type Name="CloudTask" Kind="Class" />
      <Type Name="CloudTaskListSubtasksResult" Kind="Class" />
      <Type Name="ComputeNode" Kind="Class" />
      <Type Name="ComputeNodeAddUserHeaders" Kind="Class" />
      <Type Name="ComputeNodeAddUserOptions" Kind="Class" />
      <Type Name="ComputeNodeDeallocationOption" Kind="Enumeration" />
      <Type Name="ComputeNodeDeleteUserHeaders" Kind="Class" />
      <Type Name="ComputeNodeDeleteUserOptions" Kind="Class" />
      <Type Name="ComputeNodeDisableSchedulingHeaders" Kind="Class" />
      <Type Name="ComputeNodeDisableSchedulingOptions" Kind="Class" />
      <Type Name="ComputeNodeEnableSchedulingHeaders" Kind="Class" />
      <Type Name="ComputeNodeEnableSchedulingOptions" Kind="Class" />
      <Type Name="ComputeNodeEndpointConfiguration" Kind="Class" />
      <Type Name="ComputeNodeError" Kind="Class" />
      <Type Name="ComputeNodeFillType" Kind="Enumeration" />
      <Type Name="ComputeNodeGetHeaders" Kind="Class" />
      <Type Name="ComputeNodeGetOptions" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteDesktopHeaders" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteDesktopOptions" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteLoginSettingsHeaders" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteLoginSettingsOptions" Kind="Class" />
      <Type Name="ComputeNodeGetRemoteLoginSettingsResult" Kind="Class" />
      <Type Name="ComputeNodeInformation" Kind="Class" />
      <Type Name="ComputeNodeListHeaders" Kind="Class" />
      <Type Name="ComputeNodeListNextOptions" Kind="Class" />
      <Type Name="ComputeNodeListOptions" Kind="Class" />
      <Type Name="ComputeNodeRebootHeaders" Kind="Class" />
      <Type Name="ComputeNodeRebootOption" Kind="Enumeration" />
      <Type Name="ComputeNodeRebootOptions" Kind="Class" />
      <Type Name="ComputeNodeReimageHeaders" Kind="Class" />
      <Type Name="ComputeNodeReimageOption" Kind="Enumeration" />
      <Type Name="ComputeNodeReimageOptions" Kind="Class" />
      <Type Name="ComputeNodeState" Kind="Enumeration" />
      <Type Name="ComputeNodeUpdateUserHeaders" Kind="Class" />
      <Type Name="ComputeNodeUpdateUserOptions" Kind="Class" />
      <Type Name="ComputeNodeUploadBatchServiceLogsHeaders" Kind="Class" />
      <Type Name="ComputeNodeUploadBatchServiceLogsOptions" Kind="Class" />
      <Type Name="ComputeNodeUser" Kind="Class" />
      <Type Name="ContainerConfiguration" Kind="Class" />
      <Type Name="ContainerRegistry" Kind="Class" />
      <Type Name="DataDisk" Kind="Class" />
      <Type Name="DeleteCertificateError" Kind="Class" />
      <Type Name="DependencyAction" Kind="Enumeration" />
      <Type Name="DisableComputeNodeSchedulingOption" Kind="Enumeration" />
      <Type Name="DisableJobOption" Kind="Enumeration" />
      <Type Name="ElevationLevel" Kind="Enumeration" />
      <Type Name="EnvironmentSetting" Kind="Class" />
      <Type Name="ErrorCategory" Kind="Enumeration" />
      <Type Name="ErrorMessage" Kind="Class" />
      <Type Name="ExitCodeMapping" Kind="Class" />
      <Type Name="ExitCodeRangeMapping" Kind="Class" />
      <Type Name="ExitConditions" Kind="Class" />
      <Type Name="ExitOptions" Kind="Class" />
      <Type Name="FileDeleteFromComputeNodeHeaders" Kind="Class" />
      <Type Name="FileDeleteFromComputeNodeOptions" Kind="Class" />
      <Type Name="FileDeleteFromTaskHeaders" Kind="Class" />
      <Type Name="FileDeleteFromTaskOptions" Kind="Class" />
      <Type Name="FileGetFromComputeNodeHeaders" Kind="Class" />
      <Type Name="FileGetFromComputeNodeOptions" Kind="Class" />
      <Type Name="FileGetFromTaskHeaders" Kind="Class" />
      <Type Name="FileGetFromTaskOptions" Kind="Class" />
      <Type Name="FileGetPropertiesFromComputeNodeHeaders" Kind="Class" />
      <Type Name="FileGetPropertiesFromComputeNodeOptions" Kind="Class" />
      <Type Name="FileGetPropertiesFromTaskHeaders" Kind="Class" />
      <Type Name="FileGetPropertiesFromTaskOptions" Kind="Class" />
      <Type Name="FileListFromComputeNodeHeaders" Kind="Class" />
      <Type Name="FileListFromComputeNodeNextOptions" Kind="Class" />
      <Type Name="FileListFromComputeNodeOptions" Kind="Class" />
      <Type Name="FileListFromTaskHeaders" Kind="Class" />
      <Type Name="FileListFromTaskNextOptions" Kind="Class" />
      <Type Name="FileListFromTaskOptions" Kind="Class" />
      <Type Name="FileProperties" Kind="Class" />
      <Type Name="ImageReference" Kind="Class" />
      <Type Name="InboundEndpoint" Kind="Class" />
      <Type Name="InboundEndpointProtocol" Kind="Enumeration" />
      <Type Name="InboundNATPool" Kind="Class" />
      <Type Name="IODataExpand" Kind="Interface" />
      <Type Name="IODataFilter" Kind="Interface" />
      <Type Name="IODataSelect" Kind="Interface" />
      <Type Name="IOptions" Kind="Interface" />
      <Type Name="ITimeoutOptions" Kind="Interface" />
      <Type Name="JobAction" Kind="Enumeration" />
      <Type Name="JobAddHeaders" Kind="Class" />
      <Type Name="JobAddOptions" Kind="Class" />
      <Type Name="JobAddParameter" Kind="Class" />
      <Type Name="JobConstraints" Kind="Class" />
      <Type Name="JobDeleteHeaders" Kind="Class" />
      <Type Name="JobDeleteOptions" Kind="Class" />
      <Type Name="JobDisableHeaders" Kind="Class" />
      <Type Name="JobDisableOptions" Kind="Class" />
      <Type Name="JobDisableParameter" Kind="Class" />
      <Type Name="JobEnableHeaders" Kind="Class" />
      <Type Name="JobEnableOptions" Kind="Class" />
      <Type Name="JobExecutionInformation" Kind="Class" />
      <Type Name="JobGetAllLifetimeStatisticsHeaders" Kind="Class" />
      <Type Name="JobGetAllLifetimeStatisticsOptions" Kind="Class" />
      <Type Name="JobGetHeaders" Kind="Class" />
      <Type Name="JobGetOptions" Kind="Class" />
      <Type Name="JobGetTaskCountsHeaders" Kind="Class" />
      <Type Name="JobGetTaskCountsOptions" Kind="Class" />
      <Type Name="JobListFromJobScheduleHeaders" Kind="Class" />
      <Type Name="JobListFromJobScheduleNextOptions" Kind="Class" />
      <Type Name="JobListFromJobScheduleOptions" Kind="Class" />
      <Type Name="JobListHeaders" Kind="Class" />
      <Type Name="JobListNextOptions" Kind="Class" />
      <Type Name="JobListOptions" Kind="Class" />
      <Type Name="JobListPreparationAndReleaseTaskStatusHeaders" Kind="Class" />
      <Type Name="JobListPreparationAndReleaseTaskStatusNextOptions" Kind="Class" />
      <Type Name="JobListPreparationAndReleaseTaskStatusOptions" Kind="Class" />
      <Type Name="JobManagerTask" Kind="Class" />
      <Type Name="JobPatchHeaders" Kind="Class" />
      <Type Name="JobPatchOptions" Kind="Class" />
      <Type Name="JobPatchParameter" Kind="Class" />
      <Type Name="JobPreparationAndReleaseTaskExecutionInformation" Kind="Class" />
      <Type Name="JobPreparationTask" Kind="Class" />
      <Type Name="JobPreparationTaskExecutionInformation" Kind="Class" />
      <Type Name="JobPreparationTaskState" Kind="Enumeration" />
      <Type Name="JobReleaseTask" Kind="Class" />
      <Type Name="JobReleaseTaskExecutionInformation" Kind="Class" />
      <Type Name="JobReleaseTaskState" Kind="Enumeration" />
      <Type Name="JobScheduleAddHeaders" Kind="Class" />
      <Type Name="JobScheduleAddOptions" Kind="Class" />
      <Type Name="JobScheduleAddParameter" Kind="Class" />
      <Type Name="JobScheduleDeleteHeaders" Kind="Class" />
      <Type Name="JobScheduleDeleteOptions" Kind="Class" />
      <Type Name="JobScheduleDisableHeaders" Kind="Class" />
      <Type Name="JobScheduleDisableOptions" Kind="Class" />
      <Type Name="JobScheduleEnableHeaders" Kind="Class" />
      <Type Name="JobScheduleEnableOptions" Kind="Class" />
      <Type Name="JobScheduleExecutionInformation" Kind="Class" />
      <Type Name="JobScheduleExistsHeaders" Kind="Class" />
      <Type Name="JobScheduleExistsOptions" Kind="Class" />
      <Type Name="JobScheduleGetHeaders" Kind="Class" />
      <Type Name="JobScheduleGetOptions" Kind="Class" />
      <Type Name="JobScheduleListHeaders" Kind="Class" />
      <Type Name="JobScheduleListNextOptions" Kind="Class" />
      <Type Name="JobScheduleListOptions" Kind="Class" />
      <Type Name="JobSchedulePatchHeaders" Kind="Class" />
      <Type Name="JobSchedulePatchOptions" Kind="Class" />
      <Type Name="JobSchedulePatchParameter" Kind="Class" />
      <Type Name="JobScheduleState" Kind="Enumeration" />
      <Type Name="JobScheduleStatistics" Kind="Class" />
      <Type Name="JobScheduleTerminateHeaders" Kind="Class" />
      <Type Name="JobScheduleTerminateOptions" Kind="Class" />
      <Type Name="JobScheduleUpdateHeaders" Kind="Class" />
      <Type Name="JobScheduleUpdateOptions" Kind="Class" />
      <Type Name="JobScheduleUpdateParameter" Kind="Class" />
      <Type Name="JobSchedulingError" Kind="Class" />
      <Type Name="JobSpecification" Kind="Class" />
      <Type Name="JobState" Kind="Enumeration" />
      <Type Name="JobStatistics" Kind="Class" />
      <Type Name="JobTerminateHeaders" Kind="Class" />
      <Type Name="JobTerminateOptions" Kind="Class" />
      <Type Name="JobTerminateParameter" Kind="Class" />
      <Type Name="JobUpdateHeaders" Kind="Class" />
      <Type Name="JobUpdateOptions" Kind="Class" />
      <Type Name="JobUpdateParameter" Kind="Class" />
      <Type Name="LinuxUserConfiguration" Kind="Class" />
      <Type Name="MetadataItem" Kind="Class" />
      <Type Name="MultiInstanceSettings" Kind="Class" />
      <Type Name="NameValuePair" Kind="Class" />
      <Type Name="NetworkConfiguration" Kind="Class" />
      <Type Name="NetworkSecurityGroupRule" Kind="Class" />
      <Type Name="NetworkSecurityGroupRuleAccess" Kind="Enumeration" />
      <Type Name="NodeAgentInformation" Kind="Class" />
      <Type Name="NodeAgentSku" Kind="Class" />
      <Type Name="NodeCounts" Kind="Class" />
      <Type Name="NodeDisableSchedulingParameter" Kind="Class" />
      <Type Name="NodeFile" Kind="Class" />
      <Type Name="NodeRebootParameter" Kind="Class" />
      <Type Name="NodeReimageParameter" Kind="Class" />
      <Type Name="NodeRemoveParameter" Kind="Class" />
      <Type Name="NodeUpdateUserParameter" Kind="Class" />
      <Type Name="OnAllTasksComplete" Kind="Enumeration" />
      <Type Name="OnTaskFailure" Kind="Enumeration" />
      <Type Name="OSDisk" Kind="Class" />
      <Type Name="OSType" Kind="Enumeration" />
      <Type Name="OutputFile" Kind="Class" />
      <Type Name="OutputFileBlobContainerDestination" Kind="Class" />
      <Type Name="OutputFileDestination" Kind="Class" />
      <Type Name="OutputFileUploadCondition" Kind="Enumeration" />
      <Type Name="OutputFileUploadOptions" Kind="Class" />
      <Type Name="Page`1" DisplayName="Page&lt;T&gt;" Kind="Class" />
      <Type Name="PoolAddHeaders" Kind="Class" />
      <Type Name="PoolAddOptions" Kind="Class" />
      <Type Name="PoolAddParameter" Kind="Class" />
      <Type Name="PoolDeleteHeaders" Kind="Class" />
      <Type Name="PoolDeleteOptions" Kind="Class" />
      <Type Name="PoolDisableAutoScaleHeaders" Kind="Class" />
      <Type Name="PoolDisableAutoScaleOptions" Kind="Class" />
      <Type Name="PoolEnableAutoScaleHeaders" Kind="Class" />
      <Type Name="PoolEnableAutoScaleOptions" Kind="Class" />
      <Type Name="PoolEnableAutoScaleParameter" Kind="Class" />
      <Type Name="PoolEndpointConfiguration" Kind="Class" />
      <Type Name="PoolEvaluateAutoScaleHeaders" Kind="Class" />
      <Type Name="PoolEvaluateAutoScaleOptions" Kind="Class" />
      <Type Name="PoolEvaluateAutoScaleParameter" Kind="Class" />
      <Type Name="PoolExistsHeaders" Kind="Class" />
      <Type Name="PoolExistsOptions" Kind="Class" />
      <Type Name="PoolGetAllLifetimeStatisticsHeaders" Kind="Class" />
      <Type Name="PoolGetAllLifetimeStatisticsOptions" Kind="Class" />
      <Type Name="PoolGetHeaders" Kind="Class" />
      <Type Name="PoolGetOptions" Kind="Class" />
      <Type Name="PoolInformation" Kind="Class" />
      <Type Name="PoolLifetimeOption" Kind="Enumeration" />
      <Type Name="PoolListHeaders" Kind="Class" />
      <Type Name="PoolListNextOptions" Kind="Class" />
      <Type Name="PoolListOptions" Kind="Class" />
      <Type Name="PoolListUsageMetricsHeaders" Kind="Class" />
      <Type Name="PoolListUsageMetricsNextOptions" Kind="Class" />
      <Type Name="PoolListUsageMetricsOptions" Kind="Class" />
      <Type Name="PoolNodeCounts" Kind="Class" />
      <Type Name="PoolPatchHeaders" Kind="Class" />
      <Type Name="PoolPatchOptions" Kind="Class" />
      <Type Name="PoolPatchParameter" Kind="Class" />
      <Type Name="PoolRemoveNodesHeaders" Kind="Class" />
      <Type Name="PoolRemoveNodesOptions" Kind="Class" />
      <Type Name="PoolResizeHeaders" Kind="Class" />
      <Type Name="PoolResizeOptions" Kind="Class" />
      <Type Name="PoolResizeParameter" Kind="Class" />
      <Type Name="PoolSpecification" Kind="Class" />
      <Type Name="PoolState" Kind="Enumeration" />
      <Type Name="PoolStatistics" Kind="Class" />
      <Type Name="PoolStopResizeHeaders" Kind="Class" />
      <Type Name="PoolStopResizeOptions" Kind="Class" />
      <Type Name="PoolUpdatePropertiesHeaders" Kind="Class" />
      <Type Name="PoolUpdatePropertiesOptions" Kind="Class" />
      <Type Name="PoolUpdatePropertiesParameter" Kind="Class" />
      <Type Name="PoolUpgradeOSHeaders" Kind="Class" />
      <Type Name="PoolUpgradeOSOptions" Kind="Class" />
      <Type Name="PoolUpgradeOSParameter" Kind="Class" />
      <Type Name="PoolUsageMetrics" Kind="Class" />
      <Type Name="RecentJob" Kind="Class" />
      <Type Name="ResizeError" Kind="Class" />
      <Type Name="ResourceFile" Kind="Class" />
      <Type Name="ResourceStatistics" Kind="Class" />
      <Type Name="Schedule" Kind="Class" />
      <Type Name="SchedulingState" Kind="Enumeration" />
      <Type Name="StartTask" Kind="Class" />
      <Type Name="StartTaskInformation" Kind="Class" />
      <Type Name="StartTaskState" Kind="Enumeration" />
      <Type Name="StorageAccountType" Kind="Enumeration" />
      <Type Name="SubtaskInformation" Kind="Class" />
      <Type Name="SubtaskState" Kind="Enumeration" />
      <Type Name="TaskAddCollectionHeaders" Kind="Class" />
      <Type Name="TaskAddCollectionOptions" Kind="Class" />
      <Type Name="TaskAddCollectionParameter" Kind="Class" />
      <Type Name="TaskAddCollectionResult" Kind="Class" />
      <Type Name="TaskAddHeaders" Kind="Class" />
      <Type Name="TaskAddOptions" Kind="Class" />
      <Type Name="TaskAddParameter" Kind="Class" />
      <Type Name="TaskAddResult" Kind="Class" />
      <Type Name="TaskAddStatus" Kind="Enumeration" />
      <Type Name="TaskConstraints" Kind="Class" />
      <Type Name="TaskContainerExecutionInformation" Kind="Class" />
      <Type Name="TaskContainerSettings" Kind="Class" />
      <Type Name="TaskCounts" Kind="Class" />
      <Type Name="TaskDeleteHeaders" Kind="Class" />
      <Type Name="TaskDeleteOptions" Kind="Class" />
      <Type Name="TaskDependencies" Kind="Class" />
      <Type Name="TaskExecutionInformation" Kind="Class" />
      <Type Name="TaskExecutionResult" Kind="Enumeration" />
      <Type Name="TaskFailureInformation" Kind="Class" />
      <Type Name="TaskGetHeaders" Kind="Class" />
      <Type Name="TaskGetOptions" Kind="Class" />
      <Type Name="TaskIdRange" Kind="Class" />
      <Type Name="TaskInformation" Kind="Class" />
      <Type Name="TaskListHeaders" Kind="Class" />
      <Type Name="TaskListNextOptions" Kind="Class" />
      <Type Name="TaskListOptions" Kind="Class" />
      <Type Name="TaskListSubtasksHeaders" Kind="Class" />
      <Type Name="TaskListSubtasksOptions" Kind="Class" />
      <Type Name="TaskReactivateHeaders" Kind="Class" />
      <Type Name="TaskReactivateOptions" Kind="Class" />
      <Type Name="TaskSchedulingPolicy" Kind="Class" />
      <Type Name="TaskState" Kind="Enumeration" />
      <Type Name="TaskStatistics" Kind="Class" />
      <Type Name="TaskTerminateHeaders" Kind="Class" />
      <Type Name="TaskTerminateOptions" Kind="Class" />
      <Type Name="TaskUpdateHeaders" Kind="Class" />
      <Type Name="TaskUpdateOptions" Kind="Class" />
      <Type Name="TaskUpdateParameter" Kind="Class" />
      <Type Name="UploadBatchServiceLogsConfiguration" Kind="Class" />
      <Type Name="UploadBatchServiceLogsResult" Kind="Class" />
      <Type Name="UsageStatistics" Kind="Class" />
      <Type Name="UserAccount" Kind="Class" />
      <Type Name="UserIdentity" Kind="Class" />
      <Type Name="VirtualMachineConfiguration" Kind="Class" />
      <Type Name="WindowsConfiguration" Kind="Class" />
    </Namespace>
  </Types>
  <Title>Microsoft.Azure.Batch</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.IPagedEnumerable`1" />
      </Targets>
      <Member MemberName="ForEachAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ForEachAsync&lt;T&gt; (this Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt; source, Action&lt;T&gt; body, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ForEachAsync&lt;T&gt;(class Microsoft.Azure.Batch.IPagedEnumerable`1&lt;!!T&gt; source, class System.Action`1&lt;!!T&gt; body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ForEachAsync : Microsoft.Azure.Batch.IPagedEnumerable&lt;'T&gt; * Action&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync (source, body, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="body" Type="System.Action&lt;T&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> to iterate over.</param>
          <param name="body">The delegate to execute for each element in <paramref name="source" />.</param>
          <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> for controlling the lifetime of the asynchronous operation.</param>
          <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> sequence, invoking a synchronous delegate for each element.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.PagedEnumerableExtensions" Member="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.IPagedEnumerable`1" />
      </Targets>
      <Member MemberName="ForEachAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ForEachAsync&lt;T&gt; (this Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt; source, Func&lt;T,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; body, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ForEachAsync&lt;T&gt;(class Microsoft.Azure.Batch.IPagedEnumerable`1&lt;!!T&gt; source, class System.Func`3&lt;!!T, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ForEachAsync : Microsoft.Azure.Batch.IPagedEnumerable&lt;'T&gt; * Func&lt;'T, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync (source, body, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="body" Type="System.Func&lt;T,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> to iterate over.</param>
          <param name="body">The asynchronous delegate to execute for each element in <paramref name="source" />.</param>
          <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> for controlling the lifetime of the asynchronous operation.</param>
          <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> sequence, invoking an asynchronous delegate for each element.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.PagedEnumerableExtensions" Member="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.IPagedEnumerable`1" />
      </Targets>
      <Member MemberName="ForEachAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ForEachAsync&lt;T&gt; (this Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt; source, Func&lt;T,System.Threading.Tasks.Task&gt; body, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ForEachAsync&lt;T&gt;(class Microsoft.Azure.Batch.IPagedEnumerable`1&lt;!!T&gt; source, class System.Func`2&lt;!!T, class System.Threading.Tasks.Task&gt; body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ForEachAsync : Microsoft.Azure.Batch.IPagedEnumerable&lt;'T&gt; * Func&lt;'T, System.Threading.Tasks.Task&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync (source, body, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="body" Type="System.Func&lt;T,System.Threading.Tasks.Task&gt;" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> to iterate over.</param>
          <param name="body">The asynchronous delegate to execute for each element in <paramref name="source" />.</param>
          <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> for controlling the lifetime of the asynchronous operation.</param>
          <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> sequence, invoking an asynchronous delegate for each element.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.PagedEnumerableExtensions" Member="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.IPagedEnumerable`1" />
      </Targets>
      <Member MemberName="ToListAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;T&gt;&gt; ToListAsync&lt;T&gt; (this Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt; source, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.List`1&lt;!!T&gt;&gt; ToListAsync&lt;T&gt;(class Microsoft.Azure.Batch.IPagedEnumerable`1&lt;!!T&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ToListAsync : Microsoft.Azure.Batch.IPagedEnumerable&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;'T&gt;&gt;" Usage="Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync (source, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.List&lt;T&gt;&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="source" Type="Microsoft.Azure.Batch.IPagedEnumerable&lt;T&gt;" RefType="this" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" /> to create a list from.</param>
          <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> for controlling the lifetime of the asynchronous operation.</param>
          <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1" />.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.PagedEnumerableExtensions" Member="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListNodeAgentSkus">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt; ListNodeAgentSkus (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions accountListNodeAgentSkusOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt; ListNodeAgentSkus(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, class Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions accountListNodeAgentSkusOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkus(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions)" />
        <MemberSignature Language="F#" Value="static member ListNodeAgentSkus : Microsoft.Azure.Batch.Protocol.IAccountOperations * Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkus (operations, accountListNodeAgentSkusOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="accountListNodeAgentSkusOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="accountListNodeAgentSkusOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkus(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListNodeAgentSkusAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt; ListNodeAgentSkusAsync (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions accountListNodeAgentSkusOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt; ListNodeAgentSkusAsync(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, class Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions accountListNodeAgentSkusOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNodeAgentSkusAsync : Microsoft.Azure.Batch.Protocol.IAccountOperations * Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusAsync (operations, accountListNodeAgentSkusOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="accountListNodeAgentSkusOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="accountListNodeAgentSkusOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListNodeAgentSkusNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt; ListNodeAgentSkusNext (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions accountListNodeAgentSkusNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt; ListNodeAgentSkusNext(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions accountListNodeAgentSkusNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNext(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNodeAgentSkusNext : Microsoft.Azure.Batch.Protocol.IAccountOperations * string * Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNext (operations, nextPageLink, accountListNodeAgentSkusNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="accountListNodeAgentSkusNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="accountListNodeAgentSkusNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNext(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListNodeAgentSkusNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt; ListNodeAgentSkusNextAsync (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions accountListNodeAgentSkusNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt; ListNodeAgentSkusNextAsync(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions accountListNodeAgentSkusNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNextAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNodeAgentSkusNextAsync : Microsoft.Azure.Batch.Protocol.IAccountOperations * string * Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNextAsync (operations, nextPageLink, accountListNodeAgentSkusNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="accountListNodeAgentSkusNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="accountListNodeAgentSkusNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all node agent SKUs supported by the Azure Batch service.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNextAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListPoolNodeCounts">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt; ListPoolNodeCounts (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt; ListPoolNodeCounts(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, class Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCounts(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions)" />
        <MemberSignature Language="F#" Value="static member ListPoolNodeCounts : Microsoft.Azure.Batch.Protocol.IAccountOperations * Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCounts (operations, accountListPoolNodeCountsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="accountListPoolNodeCountsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="accountListPoolNodeCountsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the number of nodes in each state, grouped by pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCounts(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListPoolNodeCountsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt; ListPoolNodeCountsAsync (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt; ListPoolNodeCountsAsync(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, class Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions accountListPoolNodeCountsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListPoolNodeCountsAsync : Microsoft.Azure.Batch.Protocol.IAccountOperations * Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsAsync (operations, accountListPoolNodeCountsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="accountListPoolNodeCountsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="accountListPoolNodeCountsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the number of nodes in each state, grouped by pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListPoolNodeCountsNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt; ListPoolNodeCountsNext (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions accountListPoolNodeCountsNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt; ListPoolNodeCountsNext(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions accountListPoolNodeCountsNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsNext(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListPoolNodeCountsNext : Microsoft.Azure.Batch.Protocol.IAccountOperations * string * Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsNext (operations, nextPageLink, accountListPoolNodeCountsNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="accountListPoolNodeCountsNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="accountListPoolNodeCountsNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the number of nodes in each state, grouped by pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsNext(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IAccountOperations" />
      </Targets>
      <Member MemberName="ListPoolNodeCountsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt; ListPoolNodeCountsNextAsync (this Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions accountListPoolNodeCountsNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt; ListPoolNodeCountsNextAsync(class Microsoft.Azure.Batch.Protocol.IAccountOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions accountListPoolNodeCountsNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsNextAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListPoolNodeCountsNextAsync : Microsoft.Azure.Batch.Protocol.IAccountOperations * string * Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsNextAsync (operations, nextPageLink, accountListPoolNodeCountsNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolNodeCounts&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IAccountOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="accountListPoolNodeCountsNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="accountListPoolNodeCountsNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the number of nodes in each state, grouped by pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListPoolNodeCountsNextAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListPoolNodeCountsNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary Get (this Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string applicationId, Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions applicationGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary Get(class Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string applicationId, class Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions applicationGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.IApplicationOperations * string * Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary" Usage="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.Get (operations, applicationId, applicationGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IApplicationOperations" RefType="this" />
          <Parameter Name="applicationId" Type="System.String" />
          <Parameter Name="applicationGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="applicationId">
            The ID of the application.
            </param>
          <param name="applicationGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified application.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string applicationId, Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions applicationGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string applicationId, class Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions applicationGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.IApplicationOperations * string * Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;" Usage="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.GetAsync (operations, applicationId, applicationGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IApplicationOperations" RefType="this" />
          <Parameter Name="applicationId" Type="System.String" />
          <Parameter Name="applicationGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="applicationId">
            The ID of the application.
            </param>
          <param name="applicationGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified application.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt; List (this Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions applicationListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt; List(class Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, class Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions applicationListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.IApplicationOperations * Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;" Usage="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.List (operations, applicationListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IApplicationOperations" RefType="this" />
          <Parameter Name="applicationListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="applicationListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the applications available in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions applicationListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, class Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions applicationListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.IApplicationOperations * Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListAsync (operations, applicationListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IApplicationOperations" RefType="this" />
          <Parameter Name="applicationListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="applicationListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the applications available in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt; ListNext (this Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions applicationListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt; ListNext(class Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions applicationListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.IApplicationOperations * string * Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;" Usage="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNext (operations, nextPageLink, applicationListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IApplicationOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="applicationListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="applicationListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the applications available in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions applicationListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.IApplicationOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions applicationListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.IApplicationOperations * string * Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNextAsync (operations, nextPageLink, applicationListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IApplicationOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="applicationListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="applicationListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the applications available in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="Add">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders Add (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders Add(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)" />
        <MemberSignature Language="F#" Value="static member Add : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter * Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add (operations, certificate, certificateAddOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="certificate" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter" />
          <Parameter Name="certificateAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="certificate">
            The certificate to be added.
            </param>
          <param name="certificateAddOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a certificate to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="AddAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt; AddAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt; AddAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter certificate, class Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions certificateAddOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter * Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync (operations, certificate, certificateAddOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="certificate" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter" />
          <Parameter Name="certificateAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="certificate">
            The certificate to be added.
            </param>
          <param name="certificateAddOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a certificate to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="CancelDeletion">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders CancelDeletion (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders CancelDeletion(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)" />
        <MemberSignature Language="F#" Value="static member CancelDeletion : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion (operations, thumbprintAlgorithm, thumbprint, certificateCancelDeletionOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="thumbprintAlgorithm" Type="System.String" />
          <Parameter Name="thumbprint" Type="System.String" />
          <Parameter Name="certificateCancelDeletionOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
          <param name="thumbprint">
            The thumbprint of the certificate being deleted.
            </param>
          <param name="certificateCancelDeletionOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="CancelDeletionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt; CancelDeletionAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt; CancelDeletionAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions certificateCancelDeletionOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member CancelDeletionAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync (operations, thumbprintAlgorithm, thumbprint, certificateCancelDeletionOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="thumbprintAlgorithm" Type="System.String" />
          <Parameter Name="thumbprint" Type="System.String" />
          <Parameter Name="certificateCancelDeletionOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
          <param name="thumbprint">
            The thumbprint of the certificate being deleted.
            </param>
          <param name="certificateCancelDeletionOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="Delete">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders Delete (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders Delete(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)" />
        <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete (operations, thumbprintAlgorithm, thumbprint, certificateDeleteOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="thumbprintAlgorithm" Type="System.String" />
          <Parameter Name="thumbprint" Type="System.String" />
          <Parameter Name="certificateDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
          <param name="thumbprint">
            The thumbprint of the certificate to be deleted.
            </param>
          <param name="certificateDeleteOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes a certificate from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="DeleteAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt; DeleteAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt; DeleteAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions certificateDeleteOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync (operations, thumbprintAlgorithm, thumbprint, certificateDeleteOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="thumbprintAlgorithm" Type="System.String" />
          <Parameter Name="thumbprint" Type="System.String" />
          <Parameter Name="certificateDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
          <param name="thumbprint">
            The thumbprint of the certificate to be deleted.
            </param>
          <param name="certificateDeleteOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a certificate from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.Certificate Get (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.Certificate Get(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.Certificate" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get (operations, thumbprintAlgorithm, thumbprint, certificateGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.Certificate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="thumbprintAlgorithm" Type="System.String" />
          <Parameter Name="thumbprint" Type="System.String" />
          <Parameter Name="certificateGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
          <param name="thumbprint">
            The thumbprint of the certificate to get.
            </param>
          <param name="certificateGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string thumbprintAlgorithm, string thumbprint, class Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions certificateGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync (operations, thumbprintAlgorithm, thumbprint, certificateGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="thumbprintAlgorithm" Type="System.String" />
          <Parameter Name="thumbprint" Type="System.String" />
          <Parameter Name="certificateGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="thumbprintAlgorithm">
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
          <param name="thumbprint">
            The thumbprint of the certificate to get.
            </param>
          <param name="certificateGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified certificate.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; List (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; List(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List (operations, certificateListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="certificateListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="certificateListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, class Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions certificateListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync (operations, certificateListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="certificateListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="certificateListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; ListNext (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt; ListNext(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext (operations, nextPageLink, certificateListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="certificateListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="certificateListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.ICertificateOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions certificateListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.ICertificateOperations * string * Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync (operations, nextPageLink, certificateListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.Certificate&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ICertificateOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="certificateListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="certificateListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="AddUser">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders AddUser (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders AddUser(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions)" />
        <MemberSignature Language="F#" Value="static member AddUser : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser (operations, poolId, nodeId, user, computeNodeAddUserOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="user" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser" />
          <Parameter Name="computeNodeAddUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the machine on which you want to create a user account.
            </param>
          <param name="user">
            The user account to be created.
            </param>
          <param name="computeNodeAddUserOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a user account to the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="AddUserAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt; AddUserAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt; AddUserAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser user, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions computeNodeAddUserOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddUserAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync (operations, poolId, nodeId, user, computeNodeAddUserOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="user" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser" />
          <Parameter Name="computeNodeAddUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the machine on which you want to create a user account.
            </param>
          <param name="user">
            The user account to be created.
            </param>
          <param name="computeNodeAddUserOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a user account to the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="DeleteUser">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders DeleteUser (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders DeleteUser(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions)" />
        <MemberSignature Language="F#" Value="static member DeleteUser : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser (operations, poolId, nodeId, userName, computeNodeDeleteUserOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="userName" Type="System.String" />
          <Parameter Name="computeNodeDeleteUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the machine on which you want to delete a user account.
            </param>
          <param name="userName">
            The name of the user account to delete.
            </param>
          <param name="computeNodeDeleteUserOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes a user account from the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="DeleteUserAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt; DeleteUserAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt; DeleteUserAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteUserAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync (operations, poolId, nodeId, userName, computeNodeDeleteUserOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="userName" Type="System.String" />
          <Parameter Name="computeNodeDeleteUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the machine on which you want to delete a user account.
            </param>
          <param name="userName">
            The name of the user account to delete.
            </param>
          <param name="computeNodeDeleteUserOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a user account from the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="DisableScheduling">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders DisableScheduling (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; nodeDisableSchedulingOption = null, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders DisableScheduling(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; nodeDisableSchedulingOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions)" />
        <MemberSignature Language="F#" Value="static member DisableScheduling : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling (operations, poolId, nodeId, nodeDisableSchedulingOption, computeNodeDisableSchedulingOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="nodeDisableSchedulingOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt;" />
          <Parameter Name="computeNodeDisableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node on which you want to disable task scheduling.
            </param>
          <param name="nodeDisableSchedulingOption">
            What to do with currently running tasks when disabling task scheduling on
            the compute node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
          <param name="computeNodeDisableSchedulingOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Disables task scheduling on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="DisableSchedulingAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt; DisableSchedulingAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; nodeDisableSchedulingOption = null, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt; DisableSchedulingAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; nodeDisableSchedulingOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DisableSchedulingAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync (operations, poolId, nodeId, nodeDisableSchedulingOption, computeNodeDisableSchedulingOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="nodeDisableSchedulingOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption&gt;" />
          <Parameter Name="computeNodeDisableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node on which you want to disable task scheduling.
            </param>
          <param name="nodeDisableSchedulingOption">
            What to do with currently running tasks when disabling task scheduling on
            the compute node. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskCompletion'
            </param>
          <param name="computeNodeDisableSchedulingOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Disables task scheduling on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="EnableScheduling">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders EnableScheduling (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders EnableScheduling(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions)" />
        <MemberSignature Language="F#" Value="static member EnableScheduling : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling (operations, poolId, nodeId, computeNodeEnableSchedulingOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeEnableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node on which you want to enable task scheduling.
            </param>
          <param name="computeNodeEnableSchedulingOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Enables task scheduling on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="EnableSchedulingAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt; EnableSchedulingAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt; EnableSchedulingAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EnableSchedulingAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync (operations, poolId, nodeId, computeNodeEnableSchedulingOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeEnableSchedulingOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node on which you want to enable task scheduling.
            </param>
          <param name="computeNodeEnableSchedulingOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Enables task scheduling on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNode Get (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNode Get(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNode" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get (operations, poolId, nodeId, computeNodeGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that you want to get information about.
            </param>
          <param name="computeNodeGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions computeNodeGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync (operations, poolId, nodeId, computeNodeGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that you want to get information about.
            </param>
          <param name="computeNodeGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="GetRemoteDesktop">
        <MemberSignature Language="C#" Value="public static System.IO.Stream GetRemoteDesktop (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetRemoteDesktop(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions)" />
        <MemberSignature Language="F#" Value="static member GetRemoteDesktop : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions -&gt; System.IO.Stream" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop (operations, poolId, nodeId, computeNodeGetRemoteDesktopOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IO.Stream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeGetRemoteDesktopOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
          <param name="computeNodeGetRemoteDesktopOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="GetRemoteDesktopAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRemoteDesktopAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRemoteDesktopAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetRemoteDesktopAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync (operations, poolId, nodeId, computeNodeGetRemoteDesktopOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeGetRemoteDesktopOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
          <param name="computeNodeGetRemoteDesktopOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="GetRemoteLoginSettings">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult GetRemoteLoginSettings (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult GetRemoteLoginSettings(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions)" />
        <MemberSignature Language="F#" Value="static member GetRemoteLoginSettings : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings (operations, poolId, nodeId, computeNodeGetRemoteLoginSettingsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeGetRemoteLoginSettingsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node for which to obtain the remote login settings.
            </param>
          <param name="computeNodeGetRemoteLoginSettingsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="GetRemoteLoginSettingsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt; GetRemoteLoginSettingsAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt; GetRemoteLoginSettingsAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetRemoteLoginSettingsAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync (operations, poolId, nodeId, computeNodeGetRemoteLoginSettingsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="computeNodeGetRemoteLoginSettingsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node for which to obtain the remote login settings.
            </param>
          <param name="computeNodeGetRemoteLoginSettingsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; List (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; List(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List (operations, poolId, computeNodeListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="computeNodeListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool from which you want to list nodes.
            </param>
          <param name="computeNodeListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the compute nodes in the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions computeNodeListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync (operations, poolId, computeNodeListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="computeNodeListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool from which you want to list nodes.
            </param>
          <param name="computeNodeListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the compute nodes in the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; ListNext (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt; ListNext(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext (operations, nextPageLink, computeNodeListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="computeNodeListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="computeNodeListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the compute nodes in the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions computeNodeListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync (operations, nextPageLink, computeNodeListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNode&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="computeNodeListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="computeNodeListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the compute nodes in the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="Reboot">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders Reboot (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; nodeRebootOption = null, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders Reboot(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; nodeRebootOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions)" />
        <MemberSignature Language="F#" Value="static member Reboot : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot (operations, poolId, nodeId, nodeRebootOption, computeNodeRebootOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="nodeRebootOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt;" />
          <Parameter Name="computeNodeRebootOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that you want to restart.
            </param>
          <param name="nodeRebootOption">
            When to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
          <param name="computeNodeRebootOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Restarts the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="RebootAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt; RebootAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; nodeRebootOption = null, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt; RebootAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; nodeRebootOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions computeNodeRebootOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RebootAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync (operations, poolId, nodeId, nodeRebootOption, computeNodeRebootOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="nodeRebootOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption&gt;" />
          <Parameter Name="computeNodeRebootOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that you want to restart.
            </param>
          <param name="nodeRebootOption">
            When to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
          <param name="computeNodeRebootOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Restarts the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="Reimage">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders Reimage (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption = null, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders Reimage(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions)" />
        <MemberSignature Language="F#" Value="static member Reimage : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage (operations, poolId, nodeId, nodeReimageOption, computeNodeReimageOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="nodeReimageOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt;" />
          <Parameter Name="computeNodeReimageOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that you want to restart.
            </param>
          <param name="nodeReimageOption">
            When to reimage the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
          <param name="computeNodeReimageOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="ReimageAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt; ReimageAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption = null, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt; ReimageAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions computeNodeReimageOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ReimageAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync (operations, poolId, nodeId, nodeReimageOption, computeNodeReimageOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="nodeReimageOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt;" />
          <Parameter Name="computeNodeReimageOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that you want to restart.
            </param>
          <param name="nodeReimageOption">
            When to reimage the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskCompletion', 'retainedData'
            </param>
          <param name="computeNodeReimageOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="UpdateUser">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders UpdateUser (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders UpdateUser(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions)" />
        <MemberSignature Language="F#" Value="static member UpdateUser : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser (operations, poolId, nodeId, userName, nodeUpdateUserParameter, computeNodeUpdateUserOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="userName" Type="System.String" />
          <Parameter Name="nodeUpdateUserParameter" Type="Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter" />
          <Parameter Name="computeNodeUpdateUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the machine on which you want to update a user account.
            </param>
          <param name="userName">
            The name of the user account to update.
            </param>
          <param name="nodeUpdateUserParameter">
            The parameters for the request.
            </param>
          <param name="computeNodeUpdateUserOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the password and expiration time of a user account on the specified
            compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="UpdateUserAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt; UpdateUserAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt; UpdateUserAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, string userName, class Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter nodeUpdateUserParameter, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateUserAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync (operations, poolId, nodeId, userName, nodeUpdateUserParameter, computeNodeUpdateUserOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="userName" Type="System.String" />
          <Parameter Name="nodeUpdateUserParameter" Type="Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter" />
          <Parameter Name="computeNodeUpdateUserOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the machine on which you want to update a user account.
            </param>
          <param name="userName">
            The name of the user account to update.
            </param>
          <param name="nodeUpdateUserParameter">
            The parameters for the request.
            </param>
          <param name="computeNodeUpdateUserOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the password and expiration time of a user account on the specified
            compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="UploadBatchServiceLogs">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult UploadBatchServiceLogs (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult UploadBatchServiceLogs(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogs(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions)" />
        <MemberSignature Language="F#" Value="static member UploadBatchServiceLogs : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogs (operations, poolId, nodeId, uploadBatchServiceLogsConfiguration, computeNodeUploadBatchServiceLogsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="uploadBatchServiceLogsConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration" />
          <Parameter Name="computeNodeUploadBatchServiceLogsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node from which you want to upload the Azure Batch
            service log files.
            </param>
          <param name="uploadBatchServiceLogsConfiguration">
            The Azure Batch service log files upload configuration.
            </param>
          <param name="computeNodeUploadBatchServiceLogsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Upload Azure Batch service log files from the specified compute node to
            Azure Blob Storage.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogs(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" />
      </Targets>
      <Member MemberName="UploadBatchServiceLogsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt; UploadBatchServiceLogsAsync (this Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt; UploadBatchServiceLogsAsync(class Microsoft.Azure.Batch.Protocol.IComputeNodeOperations operations, string poolId, string nodeId, class Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration uploadBatchServiceLogsConfiguration, class Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions computeNodeUploadBatchServiceLogsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UploadBatchServiceLogsAsync : Microsoft.Azure.Batch.Protocol.IComputeNodeOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration * Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt;" Usage="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogsAsync (operations, poolId, nodeId, uploadBatchServiceLogsConfiguration, computeNodeUploadBatchServiceLogsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IComputeNodeOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="uploadBatchServiceLogsConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration" />
          <Parameter Name="computeNodeUploadBatchServiceLogsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node from which you want to upload the Azure Batch
            service log files.
            </param>
          <param name="uploadBatchServiceLogsConfiguration">
            The Azure Batch service log files upload configuration.
            </param>
          <param name="computeNodeUploadBatchServiceLogsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Upload Azure Batch service log files from the specified compute node to
            Azure Blob Storage.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UploadBatchServiceLogsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.UploadBatchServiceLogsConfiguration,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUploadBatchServiceLogsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="DeleteFromComputeNode">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders DeleteFromComputeNode (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders DeleteFromComputeNode(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)" />
        <MemberSignature Language="F#" Value="static member DeleteFromComputeNode : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode (operations, poolId, nodeId, filePath, recursive, fileDeleteFromComputeNodeOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileDeleteFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node from which you want to delete the file.
            </param>
          <param name="filePath">
            The path to the file or directory that you want to delete.
            </param>
          <param name="recursive">
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
          <param name="fileDeleteFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes the specified file from the compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="DeleteFromComputeNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders&gt; DeleteFromComputeNodeAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders&gt; DeleteFromComputeNodeAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteFromComputeNodeAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync (operations, poolId, nodeId, filePath, recursive, fileDeleteFromComputeNodeOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileDeleteFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node from which you want to delete the file.
            </param>
          <param name="filePath">
            The path to the file or directory that you want to delete.
            </param>
          <param name="recursive">
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
          <param name="fileDeleteFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes the specified file from the compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="DeleteFromTask">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders DeleteFromTask (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions fileDeleteFromTaskOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders DeleteFromTask(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions fileDeleteFromTaskOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)" />
        <MemberSignature Language="F#" Value="static member DeleteFromTask : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask (operations, jobId, taskId, filePath, recursive, fileDeleteFromTaskOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileDeleteFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose file you want to delete.
            </param>
          <param name="filePath">
            The path to the task file or directory that you want to delete.
            </param>
          <param name="recursive">
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
          <param name="fileDeleteFromTaskOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="DeleteFromTaskAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders&gt; DeleteFromTaskAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions fileDeleteFromTaskOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders&gt; DeleteFromTaskAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions fileDeleteFromTaskOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteFromTaskAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync (operations, jobId, taskId, filePath, recursive, fileDeleteFromTaskOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileDeleteFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose file you want to delete.
            </param>
          <param name="filePath">
            The path to the task file or directory that you want to delete.
            </param>
          <param name="recursive">
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to true to
            delete the directory and all of the files and subdirectories in it. If
            recursive is false then the directory must be empty or deletion will fail.
            </param>
          <param name="fileDeleteFromTaskOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetFromComputeNode">
        <MemberSignature Language="C#" Value="public static System.IO.Stream GetFromComputeNode (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetFromComputeNode(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)" />
        <MemberSignature Language="F#" Value="static member GetFromComputeNode : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions -&gt; System.IO.Stream" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode (operations, poolId, nodeId, filePath, fileGetFromComputeNodeOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IO.Stream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that contains the file.
            </param>
          <param name="filePath">
            The path to the compute node file that you want to get the content of.
            </param>
          <param name="fileGetFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Returns the content of the specified compute node file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetFromComputeNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetFromComputeNodeAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetFromComputeNodeAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetFromComputeNodeAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync (operations, poolId, nodeId, filePath, fileGetFromComputeNodeOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that contains the file.
            </param>
          <param name="filePath">
            The path to the compute node file that you want to get the content of.
            </param>
          <param name="fileGetFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Returns the content of the specified compute node file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetFromTask">
        <MemberSignature Language="C#" Value="public static System.IO.Stream GetFromTask (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions fileGetFromTaskOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetFromTask(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions fileGetFromTaskOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)" />
        <MemberSignature Language="F#" Value="static member GetFromTask : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions -&gt; System.IO.Stream" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask (operations, jobId, taskId, filePath, fileGetFromTaskOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.IO.Stream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose file you want to retrieve.
            </param>
          <param name="filePath">
            The path to the task file that you want to get the content of.
            </param>
          <param name="fileGetFromTaskOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Returns the content of the specified task file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetFromTaskAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetFromTaskAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions fileGetFromTaskOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetFromTaskAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions fileGetFromTaskOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetFromTaskAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync (operations, jobId, taskId, filePath, fileGetFromTaskOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose file you want to retrieve.
            </param>
          <param name="filePath">
            The path to the task file that you want to get the content of.
            </param>
          <param name="fileGetFromTaskOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Returns the content of the specified task file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetPropertiesFromComputeNode">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders GetPropertiesFromComputeNode (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders GetPropertiesFromComputeNode(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions)" />
        <MemberSignature Language="F#" Value="static member GetPropertiesFromComputeNode : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNode (operations, poolId, nodeId, filePath, fileGetPropertiesFromComputeNodeOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetPropertiesFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that contains the file.
            </param>
          <param name="filePath">
            The path to the compute node file that you want to get the properties of.
            </param>
          <param name="fileGetPropertiesFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the properties of the specified compute node file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetPropertiesFromComputeNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders&gt; GetPropertiesFromComputeNodeAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders&gt; GetPropertiesFromComputeNodeAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions fileGetPropertiesFromComputeNodeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetPropertiesFromComputeNodeAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNodeAsync (operations, poolId, nodeId, filePath, fileGetPropertiesFromComputeNodeOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetPropertiesFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node that contains the file.
            </param>
          <param name="filePath">
            The path to the compute node file that you want to get the properties of.
            </param>
          <param name="fileGetPropertiesFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the properties of the specified compute node file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromComputeNodeOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetPropertiesFromTask">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders GetPropertiesFromTask (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders GetPropertiesFromTask(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions)" />
        <MemberSignature Language="F#" Value="static member GetPropertiesFromTask : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTask (operations, jobId, taskId, filePath, fileGetPropertiesFromTaskOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetPropertiesFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose file you want to get the properties of.
            </param>
          <param name="filePath">
            The path to the task file that you want to get the properties of.
            </param>
          <param name="fileGetPropertiesFromTaskOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the properties of the specified task file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="GetPropertiesFromTaskAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders&gt; GetPropertiesFromTaskAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders&gt; GetPropertiesFromTaskAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, string filePath, class Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions fileGetPropertiesFromTaskOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetPropertiesFromTaskAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * string * Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTaskAsync (operations, jobId, taskId, filePath, fileGetPropertiesFromTaskOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="filePath" Type="System.String" />
          <Parameter Name="fileGetPropertiesFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose file you want to get the properties of.
            </param>
          <param name="filePath">
            The path to the task file that you want to get the properties of.
            </param>
          <param name="fileGetPropertiesFromTaskOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the properties of the specified task file.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetPropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetPropertiesFromTaskOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromComputeNode">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromComputeNode (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions fileListFromComputeNodeOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromComputeNode(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions fileListFromComputeNodeOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)" />
        <MemberSignature Language="F#" Value="static member ListFromComputeNode : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode (operations, poolId, nodeId, recursive, fileListFromComputeNodeOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileListFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node whose files you want to list.
            </param>
          <param name="recursive">
            Whether to list children of a directory.
            </param>
          <param name="fileListFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromComputeNodeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromComputeNodeAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions fileListFromComputeNodeOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromComputeNodeAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string poolId, string nodeId, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions fileListFromComputeNodeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListFromComputeNodeAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync (operations, poolId, nodeId, recursive, fileListFromComputeNodeOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeId" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileListFromComputeNodeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool that contains the compute node.
            </param>
          <param name="nodeId">
            The ID of the compute node whose files you want to list.
            </param>
          <param name="recursive">
            Whether to list children of a directory.
            </param>
          <param name="fileListFromComputeNodeOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromComputeNodeNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromComputeNodeNext (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromComputeNodeNext(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListFromComputeNodeNext : Microsoft.Azure.Batch.Protocol.IFileOperations * string * Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext (operations, nextPageLink, fileListFromComputeNodeNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="fileListFromComputeNodeNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="fileListFromComputeNodeNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromComputeNodeNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromComputeNodeNextAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromComputeNodeNextAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListFromComputeNodeNextAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync (operations, nextPageLink, fileListFromComputeNodeNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="fileListFromComputeNodeNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="fileListFromComputeNodeNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromTask">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromTask (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions fileListFromTaskOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromTask(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions fileListFromTaskOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)" />
        <MemberSignature Language="F#" Value="static member ListFromTask : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask (operations, jobId, taskId, recursive, fileListFromTaskOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileListFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose files you want to list.
            </param>
          <param name="recursive">
            Whether to list children of the task directory. This parameter can be used
            in combination with the filter parameter to list specific type of files.
            </param>
          <param name="fileListFromTaskOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromTaskAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromTaskAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, Nullable&lt;bool&gt; recursive = null, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions fileListFromTaskOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromTaskAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string jobId, string taskId, valuetype System.Nullable`1&lt;bool&gt; recursive, class Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions fileListFromTaskOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListFromTaskAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * string * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync (operations, jobId, taskId, recursive, fileListFromTaskOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
          <Parameter Name="fileListFromTaskOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task whose files you want to list.
            </param>
          <param name="recursive">
            Whether to list children of the task directory. This parameter can be used
            in combination with the filter parameter to list specific type of files.
            </param>
          <param name="fileListFromTaskOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromTaskNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromTaskNext (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions fileListFromTaskNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt; ListFromTaskNext(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions fileListFromTaskNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListFromTaskNext : Microsoft.Azure.Batch.Protocol.IFileOperations * string * Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext (operations, nextPageLink, fileListFromTaskNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="fileListFromTaskNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="fileListFromTaskNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IFileOperations" />
      </Targets>
      <Member MemberName="ListFromTaskNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromTaskNextAsync (this Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions fileListFromTaskNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt; ListFromTaskNextAsync(class Microsoft.Azure.Batch.Protocol.IFileOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions fileListFromTaskNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListFromTaskNextAsync : Microsoft.Azure.Batch.Protocol.IFileOperations * string * Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync (operations, nextPageLink, fileListFromTaskNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.NodeFile&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IFileOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="fileListFromTaskNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="fileListFromTaskNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.FileOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Add">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders Add (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobAddParameter job, Microsoft.Azure.Batch.Protocol.Models.JobAddOptions jobAddOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders Add(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobAddParameter job, class Microsoft.Azure.Batch.Protocol.Models.JobAddOptions jobAddOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)" />
        <MemberSignature Language="F#" Value="static member Add : Microsoft.Azure.Batch.Protocol.IJobOperations * Microsoft.Azure.Batch.Protocol.Models.JobAddParameter * Microsoft.Azure.Batch.Protocol.Models.JobAddOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add (operations, job, jobAddOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="job" Type="Microsoft.Azure.Batch.Protocol.Models.JobAddParameter" />
          <Parameter Name="jobAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobAddOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="job">
            The job to be added.
            </param>
          <param name="jobAddOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a job to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="AddAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders&gt; AddAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobAddParameter job, Microsoft.Azure.Batch.Protocol.Models.JobAddOptions jobAddOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders&gt; AddAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobAddParameter job, class Microsoft.Azure.Batch.Protocol.Models.JobAddOptions jobAddOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * Microsoft.Azure.Batch.Protocol.Models.JobAddParameter * Microsoft.Azure.Batch.Protocol.Models.JobAddOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync (operations, job, jobAddOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="job" Type="Microsoft.Azure.Batch.Protocol.Models.JobAddParameter" />
          <Parameter Name="jobAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobAddOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="job">
            The job to be added.
            </param>
          <param name="jobAddOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a job to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Delete">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders Delete (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions jobDeleteOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders Delete(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions jobDeleteOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)" />
        <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete (operations, jobId, jobDeleteOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to delete.
            </param>
          <param name="jobDeleteOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes a job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="DeleteAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders&gt; DeleteAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions jobDeleteOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders&gt; DeleteAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions jobDeleteOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync (operations, jobId, jobDeleteOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to delete.
            </param>
          <param name="jobDeleteOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Disable">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders Disable (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.DisableJobOption disableTasks, Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions jobDisableOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders Disable(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, valuetype Microsoft.Azure.Batch.Protocol.Models.DisableJobOption disableTasks, class Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions jobDisableOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)" />
        <MemberSignature Language="F#" Value="static member Disable : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.DisableJobOption * Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable (operations, jobId, disableTasks, jobDisableOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="disableTasks" Type="Microsoft.Azure.Batch.Protocol.Models.DisableJobOption" />
          <Parameter Name="jobDisableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to disable.
            </param>
          <param name="disableTasks">
            What to do with active tasks associated with the job. Possible values
            include: 'requeue', 'terminate', 'wait'
            </param>
          <param name="jobDisableOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="DisableAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders&gt; DisableAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.DisableJobOption disableTasks, Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions jobDisableOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders&gt; DisableAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, valuetype Microsoft.Azure.Batch.Protocol.Models.DisableJobOption disableTasks, class Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions jobDisableOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DisableAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.DisableJobOption * Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync (operations, jobId, disableTasks, jobDisableOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="disableTasks" Type="Microsoft.Azure.Batch.Protocol.Models.DisableJobOption" />
          <Parameter Name="jobDisableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to disable.
            </param>
          <param name="disableTasks">
            What to do with active tasks associated with the job. Possible values
            include: 'requeue', 'terminate', 'wait'
            </param>
          <param name="jobDisableOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Enable">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders Enable (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions jobEnableOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders Enable(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions jobEnableOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)" />
        <MemberSignature Language="F#" Value="static member Enable : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable (operations, jobId, jobEnableOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobEnableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to enable.
            </param>
          <param name="jobEnableOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="EnableAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders&gt; EnableAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions jobEnableOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders&gt; EnableAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions jobEnableOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EnableAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync (operations, jobId, jobEnableOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobEnableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to enable.
            </param>
          <param name="jobEnableOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CloudJob Get (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobGetOptions jobGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CloudJob Get(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobGetOptions jobGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CloudJob" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get (operations, jobId, jobGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CloudJob</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="jobGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="GetAllLifetimeStatistics">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobStatistics GetAllLifetimeStatistics (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobStatistics GetAllLifetimeStatistics(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)" />
        <MemberSignature Language="F#" Value="static member GetAllLifetimeStatistics : Microsoft.Azure.Batch.Protocol.IJobOperations * Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobStatistics" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics (operations, jobGetAllLifetimeStatisticsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobStatistics</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobGetAllLifetimeStatisticsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobGetAllLifetimeStatisticsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="GetAllLifetimeStatisticsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobStatistics&gt; GetAllLifetimeStatisticsAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobStatistics&gt; GetAllLifetimeStatisticsAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAllLifetimeStatisticsAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobStatistics&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync (operations, jobGetAllLifetimeStatisticsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobStatistics&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobGetAllLifetimeStatisticsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobGetAllLifetimeStatisticsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobGetOptions jobGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobGetOptions jobGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync (operations, jobId, jobGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="jobGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="GetTaskCounts">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskCounts GetTaskCounts (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions jobGetTaskCountsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskCounts GetTaskCounts(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions jobGetTaskCountsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetTaskCounts(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions)" />
        <MemberSignature Language="F#" Value="static member GetTaskCounts : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskCounts" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetTaskCounts (operations, jobId, jobGetTaskCountsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskCounts</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobGetTaskCountsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="jobGetTaskCountsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the task counts for the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetTaskCounts(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="GetTaskCountsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskCounts&gt; GetTaskCountsAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions jobGetTaskCountsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskCounts&gt; GetTaskCountsAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions jobGetTaskCountsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetTaskCountsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetTaskCountsAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskCounts&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetTaskCountsAsync (operations, jobId, jobGetTaskCountsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskCounts&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobGetTaskCountsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="jobGetTaskCountsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the task counts for the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetTaskCountsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetTaskCountsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; List (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobListOptions jobListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; List(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobListOptions jobListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.IJobOperations * Microsoft.Azure.Batch.Protocol.Models.JobListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List (operations, jobListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the jobs in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobListOptions jobListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobListOptions jobListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * Microsoft.Azure.Batch.Protocol.Models.JobListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync (operations, jobListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the jobs in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListFromJobSchedule">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; ListFromJobSchedule (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions jobListFromJobScheduleOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; ListFromJobSchedule(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions jobListFromJobScheduleOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)" />
        <MemberSignature Language="F#" Value="static member ListFromJobSchedule : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule (operations, jobScheduleId, jobListFromJobScheduleOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobListFromJobScheduleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule from which you want to get a list of jobs.
            </param>
          <param name="jobListFromJobScheduleOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListFromJobScheduleAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListFromJobScheduleAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions jobListFromJobScheduleOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListFromJobScheduleAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions jobListFromJobScheduleOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListFromJobScheduleAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync (operations, jobScheduleId, jobListFromJobScheduleOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobListFromJobScheduleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule from which you want to get a list of jobs.
            </param>
          <param name="jobListFromJobScheduleOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListFromJobScheduleNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; ListFromJobScheduleNext (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; ListFromJobScheduleNext(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListFromJobScheduleNext : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext (operations, nextPageLink, jobListFromJobScheduleNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobListFromJobScheduleNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobListFromJobScheduleNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListFromJobScheduleNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListFromJobScheduleNextAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListFromJobScheduleNextAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListFromJobScheduleNextAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync (operations, nextPageLink, jobListFromJobScheduleNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobListFromJobScheduleNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobListFromJobScheduleNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; ListNext (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions jobListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt; ListNext(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions jobListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext (operations, nextPageLink, jobListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the jobs in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions jobListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions jobListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync (operations, nextPageLink, jobListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJob&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the jobs in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListPreparationAndReleaseTaskStatus">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt; ListPreparationAndReleaseTaskStatus (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt; ListPreparationAndReleaseTaskStatus(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)" />
        <MemberSignature Language="F#" Value="static member ListPreparationAndReleaseTaskStatus : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus (operations, jobId, jobListPreparationAndReleaseTaskStatusOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobListPreparationAndReleaseTaskStatusOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="jobListPreparationAndReleaseTaskStatusOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListPreparationAndReleaseTaskStatusAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt; ListPreparationAndReleaseTaskStatusAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt; ListPreparationAndReleaseTaskStatusAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListPreparationAndReleaseTaskStatusAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync (operations, jobId, jobListPreparationAndReleaseTaskStatusOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobListPreparationAndReleaseTaskStatusOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="jobListPreparationAndReleaseTaskStatusOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListPreparationAndReleaseTaskStatusNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt; ListPreparationAndReleaseTaskStatusNext (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt; ListPreparationAndReleaseTaskStatusNext(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListPreparationAndReleaseTaskStatusNext : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext (operations, nextPageLink, jobListPreparationAndReleaseTaskStatusNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobListPreparationAndReleaseTaskStatusNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobListPreparationAndReleaseTaskStatusNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="ListPreparationAndReleaseTaskStatusNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt; ListPreparationAndReleaseTaskStatusNextAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt; ListPreparationAndReleaseTaskStatusNextAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListPreparationAndReleaseTaskStatusNextAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync (operations, nextPageLink, jobListPreparationAndReleaseTaskStatusNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobListPreparationAndReleaseTaskStatusNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobListPreparationAndReleaseTaskStatusNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Patch">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders Patch (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter jobPatchParameter, Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions jobPatchOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders Patch(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter jobPatchParameter, class Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions jobPatchOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)" />
        <MemberSignature Language="F#" Value="static member Patch : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter * Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch (operations, jobId, jobPatchParameter, jobPatchOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobPatchParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter" />
          <Parameter Name="jobPatchOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job whose properties you want to update.
            </param>
          <param name="jobPatchParameter">
            The parameters for the request.
            </param>
          <param name="jobPatchOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="PatchAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders&gt; PatchAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter jobPatchParameter, Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions jobPatchOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders&gt; PatchAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter jobPatchParameter, class Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions jobPatchOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PatchAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter * Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync (operations, jobId, jobPatchParameter, jobPatchOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobPatchParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter" />
          <Parameter Name="jobPatchOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job whose properties you want to update.
            </param>
          <param name="jobPatchParameter">
            The parameters for the request.
            </param>
          <param name="jobPatchOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Terminate">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders Terminate (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, string terminateReason = null, Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions jobTerminateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders Terminate(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, string terminateReason, class Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions jobTerminateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)" />
        <MemberSignature Language="F#" Value="static member Terminate : Microsoft.Azure.Batch.Protocol.IJobOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate (operations, jobId, terminateReason, jobTerminateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="terminateReason" Type="System.String" />
          <Parameter Name="jobTerminateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to terminate.
            </param>
          <param name="terminateReason">
            The text you want to appear as the job's TerminateReason. The default is
            'UserTerminate'.
            </param>
          <param name="jobTerminateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Terminates the specified job, marking it as completed.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="TerminateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders&gt; TerminateAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, string terminateReason = null, Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions jobTerminateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders&gt; TerminateAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, string terminateReason, class Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions jobTerminateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member TerminateAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync (operations, jobId, terminateReason, jobTerminateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="terminateReason" Type="System.String" />
          <Parameter Name="jobTerminateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to terminate.
            </param>
          <param name="terminateReason">
            The text you want to appear as the job's TerminateReason. The default is
            'UserTerminate'.
            </param>
          <param name="jobTerminateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Terminates the specified job, marking it as completed.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders Update (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter jobUpdateParameter, Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions jobUpdateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders Update(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter jobUpdateParameter, class Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions jobUpdateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)" />
        <MemberSignature Language="F#" Value="static member Update : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter * Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update (operations, jobId, jobUpdateParameter, jobUpdateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobUpdateParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter" />
          <Parameter Name="jobUpdateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job whose properties you want to update.
            </param>
          <param name="jobUpdateParameter">
            The parameters for the request.
            </param>
          <param name="jobUpdateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobOperations" />
      </Targets>
      <Member MemberName="UpdateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders&gt; UpdateAsync (this Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter jobUpdateParameter, Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions jobUpdateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders&gt; UpdateAsync(class Microsoft.Azure.Batch.Protocol.IJobOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter jobUpdateParameter, class Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions jobUpdateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateAsync : Microsoft.Azure.Batch.Protocol.IJobOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter * Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync (operations, jobId, jobUpdateParameter, jobUpdateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="jobUpdateParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter" />
          <Parameter Name="jobUpdateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job whose properties you want to update.
            </param>
          <param name="jobUpdateParameter">
            The parameters for the request.
            </param>
          <param name="jobUpdateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Add">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders Add (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter cloudJobSchedule, Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions jobScheduleAddOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders Add(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter cloudJobSchedule, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions jobScheduleAddOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions)" />
        <MemberSignature Language="F#" Value="static member Add : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter * Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Add (operations, cloudJobSchedule, jobScheduleAddOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="cloudJobSchedule" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter" />
          <Parameter Name="jobScheduleAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="cloudJobSchedule">
            The job schedule to be added.
            </param>
          <param name="jobScheduleAddOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a job schedule to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="AddAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders&gt; AddAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter cloudJobSchedule, Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions jobScheduleAddOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders&gt; AddAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter cloudJobSchedule, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions jobScheduleAddOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter * Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.AddAsync (operations, cloudJobSchedule, jobScheduleAddOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="cloudJobSchedule" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter" />
          <Parameter Name="jobScheduleAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="cloudJobSchedule">
            The job schedule to be added.
            </param>
          <param name="jobScheduleAddOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a job schedule to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Delete">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders Delete (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions jobScheduleDeleteOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders Delete(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions jobScheduleDeleteOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions)" />
        <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Delete (operations, jobScheduleId, jobScheduleDeleteOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to delete.
            </param>
          <param name="jobScheduleDeleteOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes a job schedule from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="DeleteAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders&gt; DeleteAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions jobScheduleDeleteOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders&gt; DeleteAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions jobScheduleDeleteOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DeleteAsync (operations, jobScheduleId, jobScheduleDeleteOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to delete.
            </param>
          <param name="jobScheduleDeleteOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a job schedule from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Disable">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders Disable (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions jobScheduleDisableOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders Disable(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions jobScheduleDisableOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions)" />
        <MemberSignature Language="F#" Value="static member Disable : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Disable (operations, jobScheduleId, jobScheduleDisableOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleDisableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to disable.
            </param>
          <param name="jobScheduleDisableOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Disables a job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="DisableAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders&gt; DisableAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions jobScheduleDisableOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders&gt; DisableAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions jobScheduleDisableOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DisableAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DisableAsync (operations, jobScheduleId, jobScheduleDisableOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleDisableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to disable.
            </param>
          <param name="jobScheduleDisableOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Disables a job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Enable">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders Enable (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions jobScheduleEnableOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders Enable(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions jobScheduleEnableOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions)" />
        <MemberSignature Language="F#" Value="static member Enable : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Enable (operations, jobScheduleId, jobScheduleEnableOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleEnableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to enable.
            </param>
          <param name="jobScheduleEnableOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Enables a job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="EnableAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders&gt; EnableAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions jobScheduleEnableOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders&gt; EnableAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions jobScheduleEnableOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EnableAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.EnableAsync (operations, jobScheduleId, jobScheduleEnableOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleEnableOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to enable.
            </param>
          <param name="jobScheduleEnableOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Enables a job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Exists">
        <MemberSignature Language="C#" Value="public static bool Exists (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions jobScheduleExistsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions jobScheduleExistsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions)" />
        <MemberSignature Language="F#" Value="static member Exists : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions -&gt; bool" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Exists (operations, jobScheduleId, jobScheduleExistsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleExistsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule which you want to check.
            </param>
          <param name="jobScheduleExistsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Checks the specified job schedule exists.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="ExistsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions jobScheduleExistsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions jobScheduleExistsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ExistsAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ExistsAsync (operations, jobScheduleId, jobScheduleExistsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleExistsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule which you want to check.
            </param>
          <param name="jobScheduleExistsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Checks the specified job schedule exists.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule Get (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions jobScheduleGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule Get(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions jobScheduleGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Get (operations, jobScheduleId, jobScheduleGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to get.
            </param>
          <param name="jobScheduleGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions jobScheduleGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions jobScheduleGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.GetAsync (operations, jobScheduleId, jobScheduleGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to get.
            </param>
          <param name="jobScheduleGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt; List (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions jobScheduleListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt; List(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions jobScheduleListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.List (operations, jobScheduleListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the job schedules in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions jobScheduleListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions jobScheduleListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListAsync (operations, jobScheduleListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the job schedules in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt; ListNext (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions jobScheduleListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt; ListNext(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions jobScheduleListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNext (operations, nextPageLink, jobScheduleListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobScheduleListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobScheduleListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the job schedules in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions jobScheduleListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions jobScheduleListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNextAsync (operations, nextPageLink, jobScheduleListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="jobScheduleListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="jobScheduleListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the job schedules in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Patch">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders Patch (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter jobSchedulePatchParameter, Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions jobSchedulePatchOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders Patch(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter jobSchedulePatchParameter, class Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions jobSchedulePatchOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions)" />
        <MemberSignature Language="F#" Value="static member Patch : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter * Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Patch (operations, jobScheduleId, jobSchedulePatchParameter, jobSchedulePatchOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobSchedulePatchParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter" />
          <Parameter Name="jobSchedulePatchOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to update.
            </param>
          <param name="jobSchedulePatchParameter">
            The parameters for the request.
            </param>
          <param name="jobSchedulePatchOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="PatchAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders&gt; PatchAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter jobSchedulePatchParameter, Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions jobSchedulePatchOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders&gt; PatchAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter jobSchedulePatchParameter, class Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions jobSchedulePatchOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PatchAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter * Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.PatchAsync (operations, jobScheduleId, jobSchedulePatchParameter, jobSchedulePatchOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobSchedulePatchParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter" />
          <Parameter Name="jobSchedulePatchOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to update.
            </param>
          <param name="jobSchedulePatchParameter">
            The parameters for the request.
            </param>
          <param name="jobSchedulePatchOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Terminate">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders Terminate (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions jobScheduleTerminateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders Terminate(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions jobScheduleTerminateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions)" />
        <MemberSignature Language="F#" Value="static member Terminate : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Terminate (operations, jobScheduleId, jobScheduleTerminateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleTerminateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to terminates.
            </param>
          <param name="jobScheduleTerminateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Terminates a job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="TerminateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders&gt; TerminateAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions jobScheduleTerminateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders&gt; TerminateAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions jobScheduleTerminateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member TerminateAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.TerminateAsync (operations, jobScheduleId, jobScheduleTerminateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleTerminateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to terminates.
            </param>
          <param name="jobScheduleTerminateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Terminates a job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders Update (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter jobScheduleUpdateParameter, Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions jobScheduleUpdateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders Update(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter jobScheduleUpdateParameter, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions jobScheduleUpdateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions)" />
        <MemberSignature Language="F#" Value="static member Update : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter * Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Update (operations, jobScheduleId, jobScheduleUpdateParameter, jobScheduleUpdateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleUpdateParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter" />
          <Parameter Name="jobScheduleUpdateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to update.
            </param>
          <param name="jobScheduleUpdateParameter">
            The parameters for the request.
            </param>
          <param name="jobScheduleUpdateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" />
      </Targets>
      <Member MemberName="UpdateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders&gt; UpdateAsync (this Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter jobScheduleUpdateParameter, Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions jobScheduleUpdateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders&gt; UpdateAsync(class Microsoft.Azure.Batch.Protocol.IJobScheduleOperations operations, string jobScheduleId, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter jobScheduleUpdateParameter, class Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions jobScheduleUpdateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateAsync : Microsoft.Azure.Batch.Protocol.IJobScheduleOperations * string * Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter * Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.UpdateAsync (operations, jobScheduleId, jobScheduleUpdateParameter, jobScheduleUpdateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IJobScheduleOperations" RefType="this" />
          <Parameter Name="jobScheduleId" Type="System.String" />
          <Parameter Name="jobScheduleUpdateParameter" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter" />
          <Parameter Name="jobScheduleUpdateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobScheduleId">
            The ID of the job schedule to update.
            </param>
          <param name="jobScheduleUpdateParameter">
            The parameters for the request.
            </param>
          <param name="jobScheduleUpdateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified job schedule.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="Add">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders Add (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter pool, Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions poolAddOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders Add(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter pool, class Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions poolAddOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)" />
        <MemberSignature Language="F#" Value="static member Add : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter * Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add (operations, pool, poolAddOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="pool" Type="Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter" />
          <Parameter Name="poolAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="pool">
            The pool to be added.
            </param>
          <param name="poolAddOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a pool to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="AddAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders&gt; AddAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter pool, Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions poolAddOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders&gt; AddAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter pool, class Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions poolAddOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter * Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync (operations, pool, poolAddOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="pool" Type="Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter" />
          <Parameter Name="poolAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="pool">
            The pool to be added.
            </param>
          <param name="poolAddOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a pool to the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="Delete">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders Delete (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions poolDeleteOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders Delete(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions poolDeleteOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)" />
        <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete (operations, poolId, poolDeleteOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to delete.
            </param>
          <param name="poolDeleteOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes a pool from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="DeleteAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders&gt; DeleteAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions poolDeleteOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders&gt; DeleteAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions poolDeleteOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync (operations, poolId, poolDeleteOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to delete.
            </param>
          <param name="poolDeleteOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a pool from the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="DisableAutoScale">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders DisableAutoScale (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions poolDisableAutoScaleOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders DisableAutoScale(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions poolDisableAutoScaleOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)" />
        <MemberSignature Language="F#" Value="static member DisableAutoScale : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale (operations, poolId, poolDisableAutoScaleOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolDisableAutoScaleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool on which to disable automatic scaling.
            </param>
          <param name="poolDisableAutoScaleOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Disables automatic scaling for a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="DisableAutoScaleAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders&gt; DisableAutoScaleAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions poolDisableAutoScaleOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders&gt; DisableAutoScaleAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DisableAutoScaleAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync (operations, poolId, poolDisableAutoScaleOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolDisableAutoScaleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool on which to disable automatic scaling.
            </param>
          <param name="poolDisableAutoScaleOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Disables automatic scaling for a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="EnableAutoScale">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders EnableAutoScale (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions poolEnableAutoScaleOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders EnableAutoScale(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions poolEnableAutoScaleOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)" />
        <MemberSignature Language="F#" Value="static member EnableAutoScale : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter * Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale (operations, poolId, poolEnableAutoScaleParameter, poolEnableAutoScaleOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolEnableAutoScaleParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter" />
          <Parameter Name="poolEnableAutoScaleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool on which to enable automatic scaling.
            </param>
          <param name="poolEnableAutoScaleParameter">
            The parameters for the request.
            </param>
          <param name="poolEnableAutoScaleOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Enables automatic scaling for a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="EnableAutoScaleAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders&gt; EnableAutoScaleAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions poolEnableAutoScaleOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders&gt; EnableAutoScaleAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EnableAutoScaleAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter * Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync (operations, poolId, poolEnableAutoScaleParameter, poolEnableAutoScaleOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolEnableAutoScaleParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter" />
          <Parameter Name="poolEnableAutoScaleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool on which to enable automatic scaling.
            </param>
          <param name="poolEnableAutoScaleParameter">
            The parameters for the request.
            </param>
          <param name="poolEnableAutoScaleOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Enables automatic scaling for a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="EvaluateAutoScale">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun EvaluateAutoScale (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string autoScaleFormula, Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun EvaluateAutoScale(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string autoScaleFormula, class Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)" />
        <MemberSignature Language="F#" Value="static member EvaluateAutoScale : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale (operations, poolId, autoScaleFormula, poolEvaluateAutoScaleOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="autoScaleFormula" Type="System.String" />
          <Parameter Name="poolEvaluateAutoScaleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool on which to evaluate the automatic scaling formula.
            </param>
          <param name="autoScaleFormula">
            The formula for the desired number of compute nodes in the pool. The
            formula is validated and its results calculated, but it is not applied to
            the pool. To apply the formula to the pool, 'Enable automatic scaling on a
            pool'. For more information about specifying this formula, see
            Automatically scale compute nodes in an Azure Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </param>
          <param name="poolEvaluateAutoScaleOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="EvaluateAutoScaleAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun&gt; EvaluateAutoScaleAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string autoScaleFormula, Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun&gt; EvaluateAutoScaleAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string autoScaleFormula, class Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member EvaluateAutoScaleAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync (operations, poolId, autoScaleFormula, poolEvaluateAutoScaleOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="autoScaleFormula" Type="System.String" />
          <Parameter Name="poolEvaluateAutoScaleOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool on which to evaluate the automatic scaling formula.
            </param>
          <param name="autoScaleFormula">
            The formula for the desired number of compute nodes in the pool. The
            formula is validated and its results calculated, but it is not applied to
            the pool. To apply the formula to the pool, 'Enable automatic scaling on a
            pool'. For more information about specifying this formula, see
            Automatically scale compute nodes in an Azure Batch pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
            </param>
          <param name="poolEvaluateAutoScaleOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="Exists">
        <MemberSignature Language="C#" Value="public static bool Exists (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions poolExistsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions poolExistsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)" />
        <MemberSignature Language="F#" Value="static member Exists : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions -&gt; bool" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists (operations, poolId, poolExistsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolExistsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to get.
            </param>
          <param name="poolExistsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets basic properties of a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ExistsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions poolExistsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions poolExistsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ExistsAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync (operations, poolId, poolExistsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolExistsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to get.
            </param>
          <param name="poolExistsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets basic properties of a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CloudPool Get (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions poolGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CloudPool Get(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions poolGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CloudPool" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get (operations, poolId, poolGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CloudPool</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to get.
            </param>
          <param name="poolGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="GetAllLifetimeStatistics">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolStatistics GetAllLifetimeStatistics (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolStatistics GetAllLifetimeStatistics(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions)" />
        <MemberSignature Language="F#" Value="static member GetAllLifetimeStatistics : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolStatistics" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatistics (operations, poolGetAllLifetimeStatisticsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolStatistics</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolGetAllLifetimeStatisticsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolGetAllLifetimeStatisticsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="GetAllLifetimeStatisticsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolStatistics&gt; GetAllLifetimeStatisticsAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolStatistics&gt; GetAllLifetimeStatisticsAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAllLifetimeStatisticsAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolStatistics&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatisticsAsync (operations, poolGetAllLifetimeStatisticsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolStatistics&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolGetAllLifetimeStatisticsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolGetAllLifetimeStatisticsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllLifetimeStatisticsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions poolGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions poolGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync (operations, poolId, poolGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to get.
            </param>
          <param name="poolGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt; List (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolListOptions poolListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt; List(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolListOptions poolListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List (operations, poolListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the pools in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolListOptions poolListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolListOptions poolListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync (operations, poolListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the pools in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt; ListNext (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions poolListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt; ListNext(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions poolListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext (operations, nextPageLink, poolListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="poolListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="poolListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the pools in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions poolListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions poolListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync (operations, nextPageLink, poolListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudPool&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="poolListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="poolListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the pools in the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListUsageMetrics">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt; ListUsageMetrics (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions poolListUsageMetricsOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt; ListUsageMetrics(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions poolListUsageMetricsOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions)" />
        <MemberSignature Language="F#" Value="static member ListUsageMetrics : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetrics (operations, poolListUsageMetricsOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolListUsageMetricsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolListUsageMetricsOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListUsageMetricsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt; ListUsageMetricsAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions poolListUsageMetricsOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt; ListUsageMetricsAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, class Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions poolListUsageMetricsOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListUsageMetricsAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsAsync (operations, poolListUsageMetricsOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolListUsageMetricsOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolListUsageMetricsOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListUsageMetricsNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt; ListUsageMetricsNext (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt; ListUsageMetricsNext(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListUsageMetricsNext : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNext (operations, nextPageLink, poolListUsageMetricsNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="poolListUsageMetricsNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="poolListUsageMetricsNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ListUsageMetricsNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt; ListUsageMetricsNextAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt; ListUsageMetricsNextAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListUsageMetricsNextAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNextAsync (operations, nextPageLink, poolListUsageMetricsNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="poolListUsageMetricsNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="poolListUsageMetricsNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListUsageMetricsNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="Patch">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders Patch (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter poolPatchParameter, Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions poolPatchOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders Patch(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter poolPatchParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions poolPatchOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)" />
        <MemberSignature Language="F#" Value="static member Patch : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter * Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch (operations, poolId, poolPatchParameter, poolPatchOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolPatchParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter" />
          <Parameter Name="poolPatchOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to update.
            </param>
          <param name="poolPatchParameter">
            The parameters for the request.
            </param>
          <param name="poolPatchOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="PatchAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders&gt; PatchAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter poolPatchParameter, Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions poolPatchOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders&gt; PatchAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter poolPatchParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions poolPatchOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member PatchAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter * Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync (operations, poolId, poolPatchParameter, poolPatchOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolPatchParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter" />
          <Parameter Name="poolPatchOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to update.
            </param>
          <param name="poolPatchParameter">
            The parameters for the request.
            </param>
          <param name="poolPatchOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="RemoveNodes">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders RemoveNodes (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter nodeRemoveParameter, Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions poolRemoveNodesOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders RemoveNodes(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter nodeRemoveParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions poolRemoveNodesOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)" />
        <MemberSignature Language="F#" Value="static member RemoveNodes : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter * Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes (operations, poolId, nodeRemoveParameter, poolRemoveNodesOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeRemoveParameter" Type="Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter" />
          <Parameter Name="poolRemoveNodesOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool from which you want to remove nodes.
            </param>
          <param name="nodeRemoveParameter">
            The parameters for the request.
            </param>
          <param name="poolRemoveNodesOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Removes compute nodes from the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="RemoveNodesAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders&gt; RemoveNodesAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter nodeRemoveParameter, Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions poolRemoveNodesOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders&gt; RemoveNodesAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter nodeRemoveParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions poolRemoveNodesOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member RemoveNodesAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter * Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync (operations, poolId, nodeRemoveParameter, poolRemoveNodesOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="nodeRemoveParameter" Type="Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter" />
          <Parameter Name="poolRemoveNodesOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool from which you want to remove nodes.
            </param>
          <param name="nodeRemoveParameter">
            The parameters for the request.
            </param>
          <param name="poolRemoveNodesOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Removes compute nodes from the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="Resize">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders Resize (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter poolResizeParameter, Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions poolResizeOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders Resize(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter poolResizeParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions poolResizeOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)" />
        <MemberSignature Language="F#" Value="static member Resize : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter * Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize (operations, poolId, poolResizeParameter, poolResizeOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolResizeParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter" />
          <Parameter Name="poolResizeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to resize.
            </param>
          <param name="poolResizeParameter">
            The parameters for the request.
            </param>
          <param name="poolResizeOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="ResizeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders&gt; ResizeAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter poolResizeParameter, Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions poolResizeOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders&gt; ResizeAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter poolResizeParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions poolResizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ResizeAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter * Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync (operations, poolId, poolResizeParameter, poolResizeOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolResizeParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter" />
          <Parameter Name="poolResizeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to resize.
            </param>
          <param name="poolResizeParameter">
            The parameters for the request.
            </param>
          <param name="poolResizeOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="StopResize">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders StopResize (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions poolStopResizeOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders StopResize(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions poolStopResizeOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)" />
        <MemberSignature Language="F#" Value="static member StopResize : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize (operations, poolId, poolStopResizeOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolStopResizeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool whose resizing you want to stop.
            </param>
          <param name="poolStopResizeOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="StopResizeAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders&gt; StopResizeAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions poolStopResizeOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders&gt; StopResizeAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions poolStopResizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member StopResizeAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync (operations, poolId, poolStopResizeOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolStopResizeOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool whose resizing you want to stop.
            </param>
          <param name="poolStopResizeOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="UpdateProperties">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders UpdateProperties (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions poolUpdatePropertiesOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders UpdateProperties(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions poolUpdatePropertiesOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)" />
        <MemberSignature Language="F#" Value="static member UpdateProperties : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter * Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties (operations, poolId, poolUpdatePropertiesParameter, poolUpdatePropertiesOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolUpdatePropertiesParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter" />
          <Parameter Name="poolUpdatePropertiesOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to update.
            </param>
          <param name="poolUpdatePropertiesParameter">
            The parameters for the request.
            </param>
          <param name="poolUpdatePropertiesOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="UpdatePropertiesAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders&gt; UpdatePropertiesAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions poolUpdatePropertiesOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders&gt; UpdatePropertiesAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, class Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, class Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdatePropertiesAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter * Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync (operations, poolId, poolUpdatePropertiesParameter, poolUpdatePropertiesOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="poolUpdatePropertiesParameter" Type="Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter" />
          <Parameter Name="poolUpdatePropertiesOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to update.
            </param>
          <param name="poolUpdatePropertiesParameter">
            The parameters for the request.
            </param>
          <param name="poolUpdatePropertiesOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="UpgradeOS">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders UpgradeOS (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string targetOSVersion, Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions poolUpgradeOSOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders UpgradeOS(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string targetOSVersion, class Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions poolUpgradeOSOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)" />
        <MemberSignature Language="F#" Value="static member UpgradeOS : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS (operations, poolId, targetOSVersion, poolUpgradeOSOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="targetOSVersion" Type="System.String" />
          <Parameter Name="poolUpgradeOSOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to upgrade.
            </param>
          <param name="targetOSVersion">
            The Azure Guest OS version to be installed on the virtual machines in the
            pool.
            </param>
          <param name="poolUpgradeOSOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Upgrades the operating system of the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.IPoolOperations" />
      </Targets>
      <Member MemberName="UpgradeOSAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders&gt; UpgradeOSAsync (this Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string targetOSVersion, Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions poolUpgradeOSOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders&gt; UpgradeOSAsync(class Microsoft.Azure.Batch.Protocol.IPoolOperations operations, string poolId, string targetOSVersion, class Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions poolUpgradeOSOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpgradeOSAsync : Microsoft.Azure.Batch.Protocol.IPoolOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync (operations, poolId, targetOSVersion, poolUpgradeOSOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.IPoolOperations" RefType="this" />
          <Parameter Name="poolId" Type="System.String" />
          <Parameter Name="targetOSVersion" Type="System.String" />
          <Parameter Name="poolUpgradeOSOptions" Type="Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="poolId">
            The ID of the pool to upgrade.
            </param>
          <param name="targetOSVersion">
            The Azure Guest OS version to be installed on the virtual machines in the
            pool.
            </param>
          <param name="poolUpgradeOSOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Upgrades the operating system of the specified pool.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="Add">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders Add (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter task, Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions taskAddOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders Add(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter task, class Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions taskAddOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)" />
        <MemberSignature Language="F#" Value="static member Add : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter * Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add (operations, jobId, task, taskAddOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="task" Type="Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter" />
          <Parameter Name="taskAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to which the task is to be added.
            </param>
          <param name="task">
            The task to be added.
            </param>
          <param name="taskAddOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a task to the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="AddAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders&gt; AddAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter task, Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions taskAddOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders&gt; AddAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter task, class Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions taskAddOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter * Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync (operations, jobId, task, taskAddOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="task" Type="Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter" />
          <Parameter Name="taskAddOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to which the task is to be added.
            </param>
          <param name="task">
            The task to be added.
            </param>
          <param name="taskAddOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a task to the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="AddCollection">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult AddCollection (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt; value, Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions taskAddCollectionOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult AddCollection(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt; value, class Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions taskAddCollectionOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)" />
        <MemberSignature Language="F#" Value="static member AddCollection : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt; * Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection (operations, jobId, value, taskAddCollectionOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="value" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt;" />
          <Parameter Name="taskAddCollectionOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to which the task collection is to be added.
            </param>
          <param name="value">
            The collection of tasks to add. The maximum count of tasks is 100. The
            total serialized size of this collection must be less than 1MB. If it is
            greater than 1MB (for example if each task has 100's of resource files or
            environment variables), the request will fail with code
            'RequestBodyTooLarge' and should be retried again with fewer tasks.
            </param>
          <param name="taskAddCollectionOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Adds a collection of tasks to the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="AddCollectionAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult&gt; AddCollectionAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt; value, Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions taskAddCollectionOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult&gt; AddCollectionAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt; value, class Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions taskAddCollectionOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member AddCollectionAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt; * Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync (operations, jobId, value, taskAddCollectionOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="value" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter&gt;" />
          <Parameter Name="taskAddCollectionOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job to which the task collection is to be added.
            </param>
          <param name="value">
            The collection of tasks to add. The maximum count of tasks is 100. The
            total serialized size of this collection must be less than 1MB. If it is
            greater than 1MB (for example if each task has 100's of resource files or
            environment variables), the request will fail with code
            'RequestBodyTooLarge' and should be retried again with fewer tasks.
            </param>
          <param name="taskAddCollectionOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Adds a collection of tasks to the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="Delete">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders Delete (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions taskDeleteOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders Delete(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions taskDeleteOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)" />
        <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete (operations, jobId, taskId, taskDeleteOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job from which to delete the task.
            </param>
          <param name="taskId">
            The ID of the task to delete.
            </param>
          <param name="taskDeleteOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Deletes a task from the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="DeleteAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders&gt; DeleteAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions taskDeleteOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders&gt; DeleteAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions taskDeleteOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync (operations, jobId, taskId, taskDeleteOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskDeleteOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job from which to delete the task.
            </param>
          <param name="taskId">
            The ID of the task to delete.
            </param>
          <param name="taskDeleteOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Deletes a task from the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="Get">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CloudTask Get (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions taskGetOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CloudTask Get(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions taskGetOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)" />
        <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CloudTask" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get (operations, jobId, taskId, taskGetOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CloudTask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task to get information about.
            </param>
          <param name="taskGetOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Gets information about the specified task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="GetAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt; GetAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions taskGetOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt; GetAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions taskGetOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync (operations, jobId, taskId, taskGetOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskGetOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job that contains the task.
            </param>
          <param name="taskId">
            The ID of the task to get information about.
            </param>
          <param name="taskGetOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Gets information about the specified task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="List">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt; List (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.TaskListOptions taskListOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt; List(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.TaskListOptions taskListOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)" />
        <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * Microsoft.Azure.Batch.Protocol.Models.TaskListOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List (operations, jobId, taskListOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskListOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="taskListOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="ListAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt; ListAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, Microsoft.Azure.Batch.Protocol.Models.TaskListOptions taskListOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt; ListAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, class Microsoft.Azure.Batch.Protocol.Models.TaskListOptions taskListOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * Microsoft.Azure.Batch.Protocol.Models.TaskListOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync (operations, jobId, taskListOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskListOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskListOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="taskListOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="ListNext">
        <MemberSignature Language="C#" Value="public static Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt; ListNext (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions taskListNextOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt; ListNext(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions taskListNextOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)" />
        <MemberSignature Language="F#" Value="static member ListNext : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions -&gt; Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext (operations, nextPageLink, taskListNextOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="taskListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="taskListNextOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="ListNextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt; ListNextAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string nextPageLink, Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions taskListNextOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt; ListNextAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string nextPageLink, class Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions taskListNextOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListNextAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync (operations, nextPageLink, taskListNextOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTask&gt;&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="nextPageLink" Type="System.String" />
          <Parameter Name="taskListNextOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
          <param name="taskListNextOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="ListSubtasks">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult ListSubtasks (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions taskListSubtasksOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult ListSubtasks(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions taskListSubtasksOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)" />
        <MemberSignature Language="F#" Value="static member ListSubtasks : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks (operations, jobId, taskId, taskListSubtasksOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskListSubtasksOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="taskId">
            The ID of the task.
            </param>
          <param name="taskListSubtasksOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="ListSubtasksAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult&gt; ListSubtasksAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions taskListSubtasksOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult&gt; ListSubtasksAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions taskListSubtasksOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ListSubtasksAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync (operations, jobId, taskId, taskListSubtasksOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskListSubtasksOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job.
            </param>
          <param name="taskId">
            The ID of the task.
            </param>
          <param name="taskListSubtasksOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="Reactivate">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders Reactivate (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions taskReactivateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders Reactivate(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions taskReactivateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)" />
        <MemberSignature Language="F#" Value="static member Reactivate : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate (operations, jobId, taskId, taskReactivateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskReactivateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job containing the task.
            </param>
          <param name="taskId">
            The ID of the task to reactivate.
            </param>
          <param name="taskReactivateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Reactivates a task, allowing it to run again even if its retry count has
            been exhausted.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Reactivate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="ReactivateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders&gt; ReactivateAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions taskReactivateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders&gt; ReactivateAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions taskReactivateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member ReactivateAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync (operations, jobId, taskId, taskReactivateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskReactivateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskReactivateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job containing the task.
            </param>
          <param name="taskId">
            The ID of the task to reactivate.
            </param>
          <param name="taskReactivateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Reactivates a task, allowing it to run again even if its retry count has
            been exhausted.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ReactivateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskReactivateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="Terminate">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders Terminate (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions taskTerminateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders Terminate(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions taskTerminateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)" />
        <MemberSignature Language="F#" Value="static member Terminate : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate (operations, jobId, taskId, taskTerminateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskTerminateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job containing the task.
            </param>
          <param name="taskId">
            The ID of the task to terminate.
            </param>
          <param name="taskTerminateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Terminates the specified task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="TerminateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders&gt; TerminateAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions taskTerminateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders&gt; TerminateAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions taskTerminateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member TerminateAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync (operations, jobId, taskId, taskTerminateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="taskTerminateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job containing the task.
            </param>
          <param name="taskId">
            The ID of the task to terminate.
            </param>
          <param name="taskTerminateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Terminates the specified task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders Update (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints constraints = null, Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions taskUpdateOptions = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders Update(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskConstraints constraints, class Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions taskUpdateOptions) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)" />
        <MemberSignature Language="F#" Value="static member Update : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskConstraints * Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions -&gt; Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update (operations, jobId, taskId, constraints, taskUpdateOptions)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="constraints" Type="Microsoft.Azure.Batch.Protocol.Models.TaskConstraints" />
          <Parameter Name="taskUpdateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job containing the task.
            </param>
          <param name="taskId">
            The ID of the task to update.
            </param>
          <param name="constraints">
            Constraints that apply to this task. If omitted, the task is given the
            default constraints. For multi-instance tasks, updating the retention time
            applies only to the primary task and not subtasks.
            </param>
          <param name="taskUpdateOptions">
            Additional parameters for the operation
            </param>
          <summary>
            Updates the properties of the specified task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Azure.Batch.Protocol.ITaskOperations" />
      </Targets>
      <Member MemberName="UpdateAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders&gt; UpdateAsync (this Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, Microsoft.Azure.Batch.Protocol.Models.TaskConstraints constraints = null, Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions taskUpdateOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders&gt; UpdateAsync(class Microsoft.Azure.Batch.Protocol.ITaskOperations operations, string jobId, string taskId, class Microsoft.Azure.Batch.Protocol.Models.TaskConstraints constraints, class Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions taskUpdateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)" />
        <MemberSignature Language="F#" Value="static member UpdateAsync : Microsoft.Azure.Batch.Protocol.ITaskOperations * string * string * Microsoft.Azure.Batch.Protocol.Models.TaskConstraints * Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders&gt;" Usage="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync (operations, jobId, taskId, constraints, taskUpdateOptions, cancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="operations" Type="Microsoft.Azure.Batch.Protocol.ITaskOperations" RefType="this" />
          <Parameter Name="jobId" Type="System.String" />
          <Parameter Name="taskId" Type="System.String" />
          <Parameter Name="constraints" Type="Microsoft.Azure.Batch.Protocol.Models.TaskConstraints" />
          <Parameter Name="taskUpdateOptions" Type="Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="operations">
            The operations group for this extension method.
            </param>
          <param name="jobId">
            The ID of the job containing the task.
            </param>
          <param name="taskId">
            The ID of the task to update.
            </param>
          <param name="constraints">
            Constraints that apply to this task. If omitted, the task is given the
            default constraints. For multi-instance tasks, updating the retention time
            applies only to the primary task and not subtasks.
            </param>
          <param name="taskUpdateOptions">
            Additional parameters for the operation
            </param>
          <param name="cancellationToken">
            The cancellation token.
            </param>
          <summary>
            Updates the properties of the specified task.
            </summary>
        </Docs>
        <Link Type="Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions" Member="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
